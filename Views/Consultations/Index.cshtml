@model IEnumerable<SocialWelfarre.Models.Consultation>
@using System.IO
@{
    ViewData["Title"] = "Create of Solo Parent";
    Layout = "/Views/Shared/_DashboardLayout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Consultation Records</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <script>
        tailwind.config = {
          theme: {
            extend: {
              colors: { primary: "#4263eb", secondary: "#829af1" },
              borderRadius: {
                none: "0px",
                sm: "4px",
                DEFAULT: "8px",
                md: "12px",
                lg: "16px",
                xl: "20px",
                "2xl": "24px",
                "3xl": "32px",
                full: "9999px",
                button: "8px",
              },
            },
          },
        };
    </script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css" />
    <style>
        :where([class^="ri-"])::before {
            content: none;
        }

        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        input[type="number"] {
            -moz-appearance: textfield;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
            padding: 0.75rem 1.25rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            display: none;
        }

            .alert-success.show {
                display: block;
            }

        td img {
            transition: transform 0.2s;
        }

            td img:hover {
                transform: scale(1.1);
            }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <!-- Add New Consultation Form -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <div class="flex items-center gap-3 mb-6 border-b pb-4">
                <div class="w-8 h-8 flex items-center justify-center bg-primary text-white rounded-full">
                    <i class="ri-add-line"></i>
                </div>
                <h1 class="text-xl font-semibold text-gray-800">
                    Add New Consultation
                </h1>
            </div>

            <!-- Success Alert -->
            <div id="successAlert" class="alert-success" role="alert">
                Consultation submitted successfully!
            </div>

            <form id="consultationForm" asp-action="Create" method="post" enctype="multipart/form-data" onsubmit="return handleSubmit(event)">
                <!-- Personal Information -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-user-line text-gray-500 mr-1"></i> First Name
                            <span class="text-primary">*</span>
                        </label>
                        <input type="text"
                               name="First_Name2"
                               placeholder="Enter First Name"
                               required
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="First_Name2"></span>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-user-line text-gray-500 mr-1"></i> Middle Name
                            <span class="text-primary">*</span>
                        </label>
                        <input type="text"
                               name="Middle_Name2"
                               placeholder="Enter Middle Name"
                               required
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="Middle_Name2"></span>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-user-line text-gray-500 mr-1"></i> Last Name
                            <span class="text-primary">*</span>
                        </label>
                        <input type="text"
                               name="Last_Name2"
                               placeholder="Enter Last Name"
                               required
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="Last_Name2"></span>
                    </div>
                </div>

                <!-- Contact and Documents -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-phone-line text-gray-500 mr-1"></i> Contact Number
                            <span class="text-primary">*</span>
                        </label>
                        <input type="text"
                               name="ContactNumber2"
                               placeholder="0998......."
                               required
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="ContactNumber2"></span>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-file-list-line text-gray-500 mr-1"></i> Barangay
                            Certificate <span class="text-primary">*</span>
                        </label>
                        <div class="flex">
                            <div class="flex-grow border border-gray-300 rounded-l px-4 py-2 bg-gray-50 text-gray-500 text-sm overflow-hidden whitespace-nowrap">
                                Choose File
                            </div>
                            <button type="button"
                                    class="flex items-center justify-center px-4 py-2 bg-primary text-white rounded-r hover:bg-primary/90 transition !rounded-button whitespace-nowrap cursor-pointer">
                                Browse
                            </button>
                        </div>
                        <input type="file" name="brgyCertFile" id="brgyCertFile" accept=".jpg,.jpeg,.png,.pdf" class="hidden" required />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="brgyCertFile"></span>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-file-list-line text-gray-500 mr-1"></i> Proof of
                            Solo Parent <span class="text-primary">*</span>
                        </label>
                        <div class="flex">
                            <div class="flex-grow border border-gray-300 rounded-l px-4 py-2 bg-gray-50 text-gray-500 text-sm overflow-hidden whitespace-nowrap">
                                Choose File
                            </div>
                            <button type="button"
                                    class="flex items-center justify-center px-4 py-2 bg-primary text-white rounded-r hover:bg-primary/90 transition !rounded-button whitespace-nowrap cursor-pointer">
                                Browse
                            </button>
                        </div>
                        <input type="file" name="proofSoloParentFile" id="proofSoloParentFile" accept=".jpg,.jpeg,.png,.pdf" class="hidden" required />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="proofSoloParentFile"></span>
                    </div>
                </div>

                <!-- More Documents -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-file-list-line text-gray-500 mr-1"></i> Birth
                            Certificate <span class="text-primary">*</span>
                        </label>
                        <div class="flex">
                            <div class="flex-grow border border-gray-300 rounded-l px-4 py-2 bg-gray-50 text-gray-500 text-sm overflow-hidden whitespace-nowrap">
                                Choose File
                            </div>
                            <button type="button"
                                    class="flex items-center justify-center px-4 py-2 bg-primary text-white rounded-r hover:bg-primary/90 transition !rounded-button whitespace-nowrap cursor-pointer">
                                Browse
                            </button>
                        </div>
                        <input type="file" name="birthCertFile" id="birthCertFile" accept=".jpg,.jpeg,.png,.pdf" class="hidden" required />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="birthCertFile"></span>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-file-list-line text-gray-500 mr-1"></i> Valid ID
                            <span class="text-primary">*</span>
                        </label>
                        <div class="flex">
                            <div class="flex-grow border border-gray-300 rounded-l px-4 py-2 bg-gray-50 text-gray-500 text-sm overflow-hidden whitespace-nowrap">
                                Choose File
                            </div>
                            <button type="button"
                                    class="flex items-center justify-center px-4 py-2 bg-primary text-white rounded-r hover:bg-primary/90 transition !rounded-button whitespace-nowrap cursor-pointer">
                                Browse
                            </button>
                        </div>
                        <input type="file" name="validIdFile" id="validIdFile" accept=".jpg,.jpeg,.png,.pdf" class="hidden" required />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="validIdFile"></span>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-image-line text-gray-500 mr-1"></i> 1x1 Picture
                            <span class="text-primary">*</span>
                        </label>
                        <div class="flex">
                            <div class="flex-grow border border-gray-300 rounded-l px-4 py-2 bg-gray-50 text-gray-500 text-sm overflow-hidden whitespace-nowrap">
                                Choose File
                            </div>
                            <button type="button"
                                    class="flex items-center justify-center px-4 py-2 bg-primary text-white rounded-r hover:bg-primary/90 transition !rounded-button whitespace-nowrap cursor-pointer">
                                Browse
                            </button>
                        </div>
                        <input type="file" name="x1PicFile" id="x1PicFile" accept=".jpg,.jpeg,.png,.pdf" class="hidden" required />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="x1PicFile"></span>
                    </div>
                </div>

                <!-- Date and Time -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-calendar-line text-gray-500 mr-1"></i> Consultation
                            Date <span class="text-primary">*</span>
                        </label>
                        <input type="date"
                               name="Consultation_Date"
                               required
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="Consultation_Date"></span>
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-time-line text-gray-500 mr-1"></i> Consultation
                            Time <span class="text-primary">*</span>
                        </label>
                        <input type="time"
                               name="Consultation_Time"
                               required
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                        <span class="text-red-500 text-sm mt-1" data-valmsg-for="Consultation_Time"></span>
                    </div>
                </div>

                <!-- Submit Button -->
                <div>
                    <button type="submit"
                            class="px-6 py-2.5 bg-primary text-white font-medium rounded shadow-sm hover:bg-primary/90 transition flex items-center !rounded-button whitespace-nowrap cursor-pointer">
                        <i class="ri-add-line mr-1"></i> ADD CONSULTATION
                    </button>
                </div>
            </form>
        </div>

        <!-- Consultations Section -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <!-- Tabs -->
            <div class="flex border-b mb-4">
                <button id="pendingTab"
                        class="px-4 py-2 text-primary font-medium border-b-2 border-primary cursor-pointer">
                    Pending
                </button>
                <button id="processTab"
                        class="px-4 py-2 text-gray-500 hover:text-gray-700 cursor-pointer">
                    Process
                </button>
                <button id="approvedTab"
                        class="px-4 py-2 text-gray-500 hover:text-gray-700 cursor-pointer">
                    Approved
                </button>
                <button id="deniedTab"
                        class="px-4 py-2 text-gray-500 hover:text-gray-700 cursor-pointer">
                    Denied
                </button>
            </div>

            <h2 id="tableTitle" class="text-lg font-medium text-gray-800 mb-4">
                Pending Consultations
            </h2>

            <!-- Table Controls -->
            <div class="flex justify-between items-center mb-4">
                <div class="flex items-center">
                    <span class="text-sm text-gray-600 mr-2">Show</span>
                    <div class="relative">
                        <select id="entriesSelect"
                                class="appearance-none border border-gray-300 rounded px-3 py-1 pr-8 focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary">
                            <option>10</option>
                            <option>25</option>
                            <option>50</option>
                            <option>100</option>
                        </select>
                        <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                            <i class="ri-arrow-down-s-line text-gray-500"></i>
                        </div>
                    </div>
                    <span class="text-sm text-gray-600 ml-2">entries</span>
                </div>
                <div class="relative">
                    <input type="text"
                           id="searchInput"
                           placeholder="Search..."
                           class="border border-gray-300 rounded pl-9 pr-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <i class="ri-search-line text-gray-500"></i>
                    </div>
                </div>
            </div>

            <!-- Consultations Table -->
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Name
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Contact
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Barangay Cert
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Solo Parent Proof
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Birth Cert
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Valid ID
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Photo
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Date
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Time
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Status
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody id="consultationTableBody" class="bg-white divide-y divide-gray-200">
                        @foreach (var item in Model)
                        {
                            // Ensure status is a string
                            var status = item.Consultation_status.HasValue ? item.Consultation_status.ToString() : "Pending";
                            var statusClass = status switch
                            {
                                "Pending" => "bg-yellow-100 text-yellow-800",
                                "Process" => "bg-blue-100 text-blue-800",
                                "Approved" => "bg-green-100 text-green-800",
                                "Denied" => "bg-red-100 text-red-800",
                                _ => "bg-gray-100 text-gray-800"
                            };
                            <tr data-status="@status" class="@(status == "Pending" ? "" : "hidden")">
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @Html.DisplayFor(modelItem => item.FullName)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @Html.DisplayFor(modelItem => item.ContactNumber2)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm">
                                    @if (!string.IsNullOrEmpty(item.Brgy_Cert_Path2))
                                    {
                                        var extension = System.IO.Path.GetExtension(item.Brgy_Cert_Path2)?.ToLower();
                                        if (extension is ".jpg" or ".jpeg" or ".png")
                                        {
                                            <a href="@item.Brgy_Cert_Path2" target="_blank">
                                                <img src="@item.Brgy_Cert_Path2" alt="Barangay Certificate" class="h-12 w-12 object-cover rounded" />
                                            </a>
                                        }
                                        else if (extension == ".pdf")
                                        {
                                            <a href="@item.Brgy_Cert_Path2" target="_blank" class="text-blue-600">
                                                <i class="ri-file-pdf-line cursor-pointer"></i> View PDF
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-gray-500">Invalid file</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">No file</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm">
                                    @if (!string.IsNullOrEmpty(item.Proof_SoloParent_Path2))
                                    {
                                        var extension = System.IO.Path.GetExtension(item.Proof_SoloParent_Path2)?.ToLower();
                                        if (extension is ".jpg" or ".jpeg" or ".png")
                                        {
                                            <a href="@item.Proof_SoloParent_Path2" target="_blank">
                                                <img src="@item.Proof_SoloParent_Path2" alt="Proof of Solo Parent" class="h-12 w-12 object-cover rounded" />
                                            </a>
                                        }
                                        else if (extension == ".pdf")
                                        {
                                            <a href="@item.Proof_SoloParent_Path2" target="_blank" class="text-blue-600">
                                                <i class="ri-file-pdf-line cursor-pointer"></i> View PDF
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-gray-500">Invalid file</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">No file</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm">
                                    @if (!string.IsNullOrEmpty(item.Birth_Cert_Path2))
                                    {
                                        var extension = System.IO.Path.GetExtension(item.Birth_Cert_Path2)?.ToLower();
                                        if (extension is ".jpg" or ".jpeg" or ".png")
                                        {
                                            <a href="@item.Birth_Cert_Path2" target="_blank">
                                                <img src="@item.Birth_Cert_Path2" alt="Birth Certificate" class="h-12 w-12 object-cover rounded" />
                                            </a>
                                        }
                                        else if (extension == ".pdf")
                                        {
                                            <a href="@item.Birth_Cert_Path2" target="_blank" class="text-blue-600">
                                                <i class="ri-file-pdf-line cursor-pointer"></i> View PDF
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-gray-500">Invalid file</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">No file</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm">
                                    @if (!string.IsNullOrEmpty(item.Valid_ID_Path2))
                                    {
                                        var extension = System.IO.Path.GetExtension(item.Valid_ID_Path2)?.ToLower();
                                        if (extension is ".jpg" or ".jpeg" or ".png")
                                        {
                                            <a href="@item.Valid_ID_Path2" target="_blank">
                                                <img src="@item.Valid_ID_Path2" alt="Valid ID" class="h-12 w-12 object-cover rounded" />
                                            </a>
                                        }
                                        else if (extension == ".pdf")
                                        {
                                            <a href="@item.Valid_ID_Path2" target="_blank" class="text-blue-600">
                                                <i class="ri-file-pdf-line cursor-pointer"></i> View PDF
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-gray-500">Invalid file</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">No file</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm">
                                    @if (!string.IsNullOrEmpty(item.x1_Pic_Path2))
                                    {
                                        var extension = System.IO.Path.GetExtension(item.x1_Pic_Path2)?.ToLower();
                                        if (extension is ".jpg" or ".jpeg" or ".png")
                                        {
                                            <a href="@item.x1_Pic_Path2" target="_blank">
                                                <img src="@item.x1_Pic_Path2" alt="1x1 Picture" class="h-12 w-12 object-cover rounded" />
                                            </a>
                                        }
                                        else if (extension == ".pdf")
                                        {
                                            <a href="@item.x1_Pic_Path2" target="_blank" class="text-blue-600">
                                                <i class="ri-file-pdf-line cursor-pointer"></i> View PDF
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-gray-500">Invalid file</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-gray-500">No file</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @Html.DisplayFor(modelItem => item.Consultation_Date)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @Html.DisplayFor(modelItem => item.Consultation_Time)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full @statusClass">@status</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    <div class="flex space-x-2">
                                        <a href="@Url.Action("Details", new { id = item.Id })"
                                           class="w-8 h-8 flex items-center justify-center text-blue-600 hover:bg-blue-50 rounded-full cursor-pointer">
                                            <i class="ri-eye-line"></i>
                                        </a>
                                        @{
                                            var canEdit = status == "Pending" && (User.IsInRole("Staff1") || User.IsInRole("Admin")) ||
                                            status == "Process" && (User.IsInRole("Staff2") || User.IsInRole("Admin")) ||
                                            status == "Approved" || status == "Denied";
                                        }
                                        @if (canEdit)
                                        {
                                            <a href="@Url.Action("Edit", new { id = item.Id })"
                                               class="w-8 h-8 flex items-center justify-center text-green-600 hover:bg-green-50 rounded-full cursor-pointer">
                                                <i class="ri-pencil-line"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="flex items-center justify-between mt-4">
                <div id="paginationInfo" class="text-sm text-gray-700">
                    Showing <span class="font-medium">1</span> to
                    <span class="font-medium">10</span> of
                    <span class="font-medium">@Model.Count()</span> entries
                </div>
                <div class="flex space-x-1">
                    <button id="prevPage"
                            class="px-3 py-1 border border-gray-300 rounded-l bg-white text-gray-500 hover:bg-gray-50 disabled:opacity-50 cursor-pointer"
                            disabled>
                        Previous
                    </button>
                    <button id="currentPage"
                            class="px-3 py-1 border border-gray-300 bg-primary text-white cursor-pointer">
                        1
                    </button>
                    <button id="nextPage"
                            class="px-3 py-1 border border-gray-300 rounded-r bg-white text-gray-500 hover:bg-gray-50 disabled:opacity-50 cursor-pointer">
                        Next
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // File upload buttons
            const fileButtons = document.querySelectorAll('button[type="button"]');
            const fileInputs = document.querySelectorAll('input[type="file"]');

            for (let i = 0; i < fileButtons.length; i++) {
                fileButtons[i].addEventListener("click", function () {
                    fileInputs[i].click();
                });

                fileInputs[i].addEventListener("change", function () {
                    const fileName = this.files[0] ? this.files[0].name : "Choose File";
                    this.previousElementSibling.querySelector("div").textContent = fileName;
                });
            }

            // Form submission
            function handleSubmit(event) {
                const form = document.getElementById("consultationForm");
                if (form.checkValidity()) {
                    const alert = document.getElementById("successAlert");
                    alert.classList.add("show");
                    setTimeout(() => alert.classList.remove("show"), 3000);
                    return true;
                } else {
                    event.preventDefault();
                    return false;
                }
            }

            // Tab switching
            const pendingTab = document.getElementById("pendingTab");
            const processTab = document.getElementById("processTab");
            const approvedTab = document.getElementById("approvedTab");
            const deniedTab = document.getElementById("deniedTab");
            const tableTitle = document.getElementById("tableTitle");
            const tableBody = document.getElementById("consultationTableBody");
            const tabs = [pendingTab, processTab, approvedTab, deniedTab];

            function setActiveTab(activeTab) {
                tabs.forEach((tab) => {
                    tab.className = "px-4 py-2 text-gray-500 hover:text-gray-700 cursor-pointer";
                });
                activeTab.className = "px-4 py-2 text-primary font-medium border-b-2 border-primary cursor-pointer";
            }

            function updateTableContent(status) {
                tableTitle.textContent = status + " Consultations";
                const rows = tableBody.querySelectorAll("tr");
                rows.forEach((row) => {
                    row.classList.toggle("hidden", row.dataset.status !== status);
                });
                updatePagination();
            }

            pendingTab.addEventListener("click", function () {
                setActiveTab(this);
                updateTableContent("Pending");
            });

            processTab.addEventListener("click", function () {
                setActiveTab(this);
                updateTableContent("Process");
            });

            approvedTab.addEventListener("click", function () {
                setActiveTab(this);
                updateTableContent("Approved");
            });

            deniedTab.addEventListener("click", function () {
                setActiveTab(this);
                updateTableContent("Denied");
            });

            // Pagination and Search
            const entriesSelect = document.getElementById("entriesSelect");
            const searchInput = document.getElementById("searchInput");
            const prevPage = document.getElementById("prevPage");
            const nextPage = document.getElementById("nextPage");
            const currentPage = document.getElementById("currentPage");
            let currentPageNum = 1;
            let entriesPerPage = parseInt(entriesSelect.value);

            function updatePagination() {
                const rows = Array.from(tableBody.querySelectorAll("tr:not(.hidden)"));
                const totalEntries = rows.length;
                const start = (currentPageNum - 1) * entriesPerPage + 1;
                const end = Math.min(start + entriesPerPage - 1, totalEntries);
                document.getElementById("paginationInfo").innerHTML = `
                    Showing <span class="font-medium">${start}</span> to
                    <span class="font-medium">${end}</span> of
                    <span class="font-medium">${totalEntries}</span> entries
                `;
                prevPage.disabled = currentPageNum === 1;
                nextPage.disabled = end >= totalEntries;
                currentPage.textContent = currentPageNum;
                rows.forEach((row, index) => {
                    row.style.display = index >= (currentPageNum - 1) * entriesPerPage && index < currentPageNum * entriesPerPage ? "" : "none";
                });
            }

            entriesSelect.addEventListener("change", function () {
                entriesPerPage = parseInt(this.value);
                currentPageNum = 1;
                updatePagination();
            });

            searchInput.addEventListener("input", function () {
                const searchTerm = this.value.toLowerCase();
                const rows = tableBody.querySelectorAll("tr");
                rows.forEach((row) => {
                    const name = row.cells[0].textContent.toLowerCase();
                    row.classList.toggle("hidden", !name.includes(searchTerm) && !row.classList.contains("hidden"));
                });
                currentPageNum = 1;
                updatePagination();
            });

            prevPage.addEventListener("click", function () {
                if (currentPageNum > 1) {
                    currentPageNum--;
                    updatePagination();
                }
            });

            nextPage.addEventListener("click", function () {
                const rows = Array.from(tableBody.querySelectorAll("tr:not(.hidden)"));
                if (currentPageNum * entriesPerPage < rows.length) {
                    currentPageNum++;
                    updatePagination();
                }
            });

            // Initial pagination update
            updatePagination();
        });
    </script>
</body>
</html>