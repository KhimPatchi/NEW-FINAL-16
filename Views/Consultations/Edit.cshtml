@model SocialWelfarre.Models.Consultation

@{
    ViewData["Title"] = "Edit Consultation";
    Layout = "/Views/Shared/_DashboardLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Consultation</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: { primary: "#4263eb", secondary: "#829af1" },
                    borderRadius: {
                        none: "0px",
                        sm: "4px",
                        DEFAULT: "8px",
                        md: "12px",
                        lg: "16px",
                        xl: "20px",
                        "2xl": "24px",
                        "3xl": "32px",
                        full: "9999px",
                        button: "8px",
                    },
                },
            },
        };
    </script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        .form-control {
            background-color: #f9fafb;
            border: 1px solid #e5e7eb;
            color: #374151;
            border-radius: 8px;
            padding: 10px 12px;
            transition: all 0.3s ease;
            width: 100%;
        }

            .form-control:focus {
                outline: none;
                border-color: #4263eb;
                box-shadow: 0 0 0 3px rgba(66, 99, 235, 0.2);
            }

        .form-select {
            background-color: #f9fafb;
            border: 1px solid #e5e7eb;
            color: #374151;
            border-radius: 8px;
            padding: 10px 12px;
            transition: all 0.3s ease;
            width: 100%;
        }

            .form-select:focus {
                outline: none;
                border-color: #4263eb;
                box-shadow: 0 0 0 3px rgba(66, 99, 235, 0.2);
            }

        .card {
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            border-radius: 8px;
        }

        .form-group label {
            font-weight: 500;
            color: #374151;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
        }

            .form-group label i {
                color: #4263eb;
                margin-right: 6px;
            }

        .custom-file-upload {
            position: relative;
            display: inline-block;
            width: 100%;
        }

            .custom-file-upload input[type="file"] {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                opacity: 0;
                cursor: pointer;
            }

        .custom-file-label {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 10px 15px;
            background-color: #ffffff;
            color: #374151;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            width: 100%;
            text-align: center;
        }

            .custom-file-label i {
                margin-right: 8px;
                color: #374151;
            }

            .custom-file-label:hover {
                background-color: #f3f4f6;
                box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
                transform: translateY(-1px);
            }

            .custom-file-label:active {
                transform: translateY(1px);
            }

        .text-danger {
            color: #dc2626;
            font-size: 0.875rem;
            margin-top: 5px;
            display: block;
        }

        .form-row {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .form-group {
            flex: 1;
            min-width: 200px;
        }

        img {
            max-width: 100px;
            border-radius: 4px;
            margin-top: 8px;
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <div class="card bg-white">
            <div class="card-body p-6">
                <div class="form-section">
                    <div class="flex items-center gap-3 mb-6">
                        <div class="w-10 h-10 flex items-center justify-center bg-primary/10 text-primary rounded-full">
                            <i class="ri-edit-line text-xl"></i>
                        </div>
                        <h4 class="text-2xl font-semibold text-gray-800">Edit Consultation</h4>
                    </div>
                    <form asp-action="Edit" method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>
                        <input type="hidden" asp-for="Id" />
                        <div class="form-row">
                            <div class="form-group">
                                <label asp-for="First_Name2" class="form-label"><i class="ri-user-line"></i> First Name</label>
                                <input asp-for="First_Name2" class="form-control" placeholder="Enter First Name" />
                                <span asp-validation-for="First_Name2" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Middle_Name2" class="form-label"><i class="ri-user-line"></i> Middle Name</label>
                                <input asp-for="Middle_Name2" class="form-control" placeholder="Enter Middle Name" />
                                <span asp-validation-for="Middle_Name2" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Last_Name2" class="form-label"><i class="ri-user-line"></i> Last Name</label>
                                <input asp-for="Last_Name2" class="form-control" placeholder="Enter Last Name" />
                                <span asp-validation-for="Last_Name2" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="form-row mt-4">
                            <!-- Barangay Certificate -->
                            <div class="form-group">
                                <label for="brgyCertFile"><i class="ri-file-certificate-line"></i> Barangay Certificate</label>
                                <div class="custom-file-upload">
                                    <input type="file" name="brgyCertFile" id="brgyCertFile" accept=".jpg,.jpeg,.png,.pdf" />
                                    <label for="brgyCertFile" class="custom-file-label"><i class="ri-upload-line"></i> Choose File</label>
                                </div>
                                <span asp-validation-for="Brgy_Cert2" class="text-danger"></span>
                                @if (ViewData.ModelState["brgyCertFile"]?.Errors.Any() == true)
                                {
                                    <span class="text-danger">@ViewData.ModelState["brgyCertFile"].Errors.First().ErrorMessage</span>
                                }
                                @if (!string.IsNullOrEmpty(Model.Brgy_Cert_Path2))
                                {
                                    <p class="mt-2">
                                        Current file:
                                        @{
                                            var extension = System.IO.Path.GetExtension(Model.Brgy_Cert_Path2)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(Model.Brgy_Cert_Path2)" alt="Barangay Certificate" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                    </p>
                                }
                            </div>
                            <!-- Proof of Solo Parent -->
                            <div class="form-group">
                                <label for="proofSoloParentFile"><i class="ri-file-shield-line"></i> Proof of Solo Parent</label>
                                <div class="custom-file-upload">
                                    <input type="file" name="proofSoloParentFile" id="proofSoloParentFile" accept=".jpg,.jpeg,.png,.pdf" />
                                    <label for="proofSoloParentFile" class="custom-file-label"><i class="ri-upload-line"></i> Choose File</label>
                                </div>
                                <span asp-validation-for="Proof_SoloParent2" class="text-danger"></span>
                                @if (ViewData.ModelState["proofSoloParentFile"]?.Errors.Any() == true)
                                {
                                    <span class="text-danger">@ViewData.ModelState["proofSoloParentFile"].Errors.First().ErrorMessage</span>
                                }
                                @if (!string.IsNullOrEmpty(Model.Proof_SoloParent_Path2))
                                {
                                    <p class="mt-2">
                                        Current file:
                                        @{
                                            var extension = System.IO.Path.GetExtension(Model.Proof_SoloParent_Path2)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(Model.Proof_SoloParent_Path2)" alt="Proof of Solo Parent" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                    </p>
                                }
                            </div>
                        </div>
                        <div class="form-row mt-4">
                            <!-- Birth Certificate -->
                            <div class="form-group">
                                <label for="birthCertFile"><i class="ri-file-certificate-line"></i> Birth Certificate</label>
                                <div class="custom-file-upload">
                                    <input type="file" name="birthCertFile" id="birthCertFile" accept=".jpg,.jpeg,.png,.pdf" />
                                    <label for="birthCertFile" class="custom-file-label"><i class="ri-upload-line"></i> Choose File</label>
                                </div>
                                <span asp-validation-for="Birth_Cert2" class="text-danger"></span>
                                @if (ViewData.ModelState["birthCertFile"]?.Errors.Any() == true)
                                {
                                    <span class="text-danger">@ViewData.ModelState["birthCertFile"].Errors.First().ErrorMessage</span>
                                }
                                @if (!string.IsNullOrEmpty(Model.Birth_Cert_Path2))
                                {
                                    <p class="mt-2">
                                        Current file:
                                        @{
                                            var extension = System.IO.Path.GetExtension(Model.Birth_Cert_Path2)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(Model.Birth_Cert_Path2)" alt="Birth Certificate" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                    </p>
                                }
                            </div>
                            <!-- Valid ID -->
                            <div class="form-group">
                                <label for="validIdFile"><i class="ri-id-card-line"></i> Valid ID</label>
                                <div class="custom-file-upload">
                                    <input type="file" name="validIdFile" id="validIdFile" accept=".jpg,.jpeg,.png,.pdf" />
                                    <label for="validIdFile" class="custom-file-label"><i class="ri-upload-line"></i> Choose File</label>
                                </div>
                                <span asp-validation-for="Valid_ID2" class="text-danger"></span>
                                @if (ViewData.ModelState["validIdFile"]?.Errors.Any() == true)
                                {
                                    <span class="text-danger">@ViewData.ModelState["validIdFile"].Errors.First().ErrorMessage</span>
                                }
                                @if (!string.IsNullOrEmpty(Model.Valid_ID_Path2))
                                {
                                    <p class="mt-2">
                                        Current file:
                                        @{
                                            var extension = System.IO.Path.GetExtension(Model.Valid_ID_Path2)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(Model.Valid_ID_Path2)" alt="Valid ID" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                    </p>
                                }
                            </div>
                        </div>
                        <div class="form-row mt-4">
                            <!-- 1x1 Picture -->
                            <div class="form-group">
                                <label for="x1PicFile"><i class="ri-image-line"></i> 1x1 Picture</label>
                                <div class="custom-file-upload">
                                    <input type="file" name="x1PicFile" id="x1PicFile" accept=".jpg,.jpeg,.png" />
                                    <label for="x1PicFile" class="custom-file-label"><i class="ri-upload-line"></i> Choose File</label>
                                </div>
                                <span asp-validation-for="x1_Pic2" class="text-danger"></span>
                                @if (ViewData.ModelState["x1PicFile"]?.Errors.Any() == true)
                                {
                                    <span class="text-danger">@ViewData.ModelState["x1PicFile"].Errors.First().ErrorMessage</span>
                                }
                                @if (!string.IsNullOrEmpty(Model.x1_Pic_Path2))
                                {
                                    <p class="mt-2">
                                        Current file:
                                        <img src="@Url.Content(Model.x1_Pic_Path2)" alt="1x1 Picture" />
                                    </p>
                                }
                            </div>
                        </div>
                        <div class="form-row mt-4">
                            <div class="form-group">
                                <label asp-for="Consultation_Date" class="form-label"><i class="ri-calendar-line"></i> Consultation Date</label>
                                <input asp-for="Consultation_Date" class="form-control" type="date" />
                                <span asp-validation-for="Consultation_Date" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Consultation_Time" class="form-label"><i class="ri-time-line"></i> Consultation Time</label>
                                <input asp-for="Consultation_Time" class="form-control" type="time" />
                                <span asp-validation-for="Consultation_Time" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Consultation_status" class="form-label"><i class="ri-information-line"></i> Status</label>
                                <select asp-for="Consultation_status" class="form-select">
                                    <option value="">-- Select Status --</option>
                                    <option value="Pending">Pending</option>
                                    <option value="Approved">Approved</option>
                                    <option value="Rejected">Rejected</option>
                                </select>
                                <span asp-validation-for="Consultation_status" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="flex gap-4 mt-6">
                            <button type="submit" class="px-6 py-2.5 bg-primary text-white font-medium rounded-button flex items-center hover:bg-blue-700 transition">
                                <i class="ri-save-line mr-1"></i> Save
                            </button>
                            <a asp-action="Index" class="px-6 py-2.5 bg-gray-500 text-white font-medium rounded-button flex items-center hover:bg-gray-600 transition">
                                <i class="ri-arrow-left-line mr-1"></i> Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
            document.querySelectorAll('.custom-file-upload input[type="file"]').forEach(input => {
                input.addEventListener('change', function () {
                    const label = this.nextElementSibling;
                    const fileName = this.files.length > 0 ? this.files[0].name : 'Choose File';
                    label.innerHTML = `<i class="ri-upload-line"></i> ${fileName}`;
                });
            });
        </script>
    }
</body>
</html>