@model SocialWelfarre.Models.Consultation

@{
    ViewData["Title"] = "Consultation Details";
    Layout = "/Views/Shared/_DashboardLayout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Consultation Details</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: { primary: "#4263eb", secondary: "#829af1" },
                    borderRadius: {
                        none: "0px",
                        sm: "4px",
                        DEFAULT: "8px",
                        md: "12px",
                        lg: "16px",
                        xl: "20px",
                        "2xl": "24px",
                        "3xl": "32px",
                        full: "9999px",
                        button: "8px",
                    },
                },
            },
        };
    </script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }

        .form-control {
            background-color: #f9fafb;
            border: 1px solid #e5e7eb;
            color: #374151;
            border-radius: 8px;
            padding: 10px 12px;
            transition: all 0.3s ease;
        }

            .form-control:focus {
                outline: none;
                border-color: #4263eb;
                box-shadow: 0 0 0 3px rgba(66, 99, 235, 0.2);
            }

            .form-control[readonly] {
                background-color: #f3f4f6;
                cursor: default;
            }

        .card {
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            transition: all 0.3s ease;
            border-radius: 8px;
        }

            .card:hover {
                transform: translateY(-4px);
                box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            }

        .document-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .document-item {
            text-align: center;
        }

            .document-item img {
                max-width: 100%;
                max-height: 150px;
                object-fit: cover;
                border-radius: 8px;
                transition: all 0.3s ease;
            }

                .document-item img:hover {
                    transform: scale(1.05);
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                }

        .form-group label {
            font-weight: 500;
            color: #374151;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
        }

            .form-group label i {
                color: #4263eb;
                margin-right: 6px;
            }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <div class="flex items-center gap-3 mb-6">
            <div class="w-10 h-10 flex items-center justify-center bg-primary/10 text-primary rounded-full">
                <i class="ri-file-info-line text-xl"></i>
            </div>
            <h1 class="text-2xl font-semibold text-gray-800">Consultation Details</h1>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Personal Information Card -->
            <div class="card bg-white">
                <div class="bg-primary text-white px-6 py-4 rounded-t-lg">
                    <h5 class="text-lg font-medium flex items-center">
                        <i class="ri-user-line mr-2"></i> Personal Information
                    </h5>
                </div>
                <div class="card-body p-6">
                    <div class="form-group">
                        <label><i class="ri-user-line"></i> @Html.DisplayNameFor(model => model.First_Name2)</label>
                        <input type="text" value="@Model.First_Name2" readonly class="form-control w-full" />
                    </div>
                    <div class="form-group">
                        <label><i class="ri-user-line"></i> @Html.DisplayNameFor(model => model.Middle_Name2)</label>
                        <input type="text" value="@Model.Middle_Name2" readonly class="form-control w-full" />
                    </div>
                    <div class="form-group">
                        <label><i class="ri-user-line"></i> @Html.DisplayNameFor(model => model.Last_Name2)</label>
                        <input type="text" value="@Model.Last_Name2" readonly class="form-control w-full" />
                    </div>
                </div>
            </div>

            <!-- Consultation Details Card -->
            <div class="card bg-white">
                <div class="bg-primary text-white px-6 py-4 rounded-t-lg">
                    <h5 class="text-lg font-medium flex items-center">
                        <i class="ri-calendar-check-line mr-2"></i> Consultation Details
                    </h5>
                </div>
                <div class="card-body p-6">
                    <div class="form-group">
                        <label><i class="ri-calendar-line"></i> @Html.DisplayNameFor(model => model.Consultation_Date)</label>
                        <input type="text" value="@Model.Consultation_Date" readonly class="form-control w-full" />
                    </div>
                    <div class="form-group">
                        <label><i class="ri-time-line"></i> @Html.DisplayNameFor(model => model.Consultation_Time)</label>
                        <input type="text" value="@Model.Consultation_Time" readonly class="form-control w-full" />
                    </div>
                    <div class="form-group">
                        <label><i class="ri-information-line"></i> @Html.DisplayNameFor(model => model.Consultation_status)</label>
                        <input type="text" value="@Model.Consultation_status" readonly class="form-control w-full" />
                    </div>
                </div>
            </div>
        </div>

        <!-- Uploaded Documents Card -->
        <div class="card bg-white mt-6">
            <div class="bg-primary text-white px-6 py-4 rounded-t-lg">
                <h5 class="text-lg font-medium flex items-center">
                    <i class="ri-file-text-line mr-2"></i> Uploaded Documents
                </h5>
            </div>
            <div class="card-body p-6">
                <div class="document-grid">
                    <!-- Barangay Certificate -->
                    <div class="document-item">
                        <label><i class="ri-file-certificate-line"></i> Barangay Certificate</label>
                        @if (!string.IsNullOrEmpty(Model.Brgy_Cert_Path2))
                        {
                            var extension = System.IO.Path.GetExtension(Model.Brgy_Cert_Path2)?.ToLower();
                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                            {
                                <img src="@Url.Content(Model.Brgy_Cert_Path2)" alt="@Model.Brgy_Cert2" class="img-fluid" />
                            }
                            else
                            {
                                <input type="text" value="Non-image file: @Model.Brgy_Cert2" readonly class="form-control w-full" />
                            }
                        }
                        else
                        {
                            <input type="text" value="No file uploaded" readonly class="form-control w-full" />
                        }
                    </div>

                    <!-- Proof of Solo Parent -->
                    <div class="document-item">
                        <label><i class="ri-file-shield-line"></i> Proof of Solo Parent</label>
                        @if (!string.IsNullOrEmpty(Model.Proof_SoloParent_Path2))
                        {
                            var extension = System.IO.Path.GetExtension(Model.Proof_SoloParent_Path2)?.ToLower();
                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                            {
                                <img src="@Url.Content(Model.Proof_SoloParent_Path2)" alt="@Model.Proof_SoloParent2" class="img-fluid" />
                            }
                            else
                            {
                                <input type="text" value="Non-image file: @Model.Proof_SoloParent2" readonly class="form-control w-full" />
                            }
                        }
                        else
                        {
                            <input type="text" value="No file uploaded" readonly class="form-control w-full" />
                        }
                    </div>

                    <!-- Birth Certificate -->
                    <div class="document-item">
                        <label><i class="ri-file-certificate-line"></i> Birth Certificate</label>
                        @if (!string.IsNullOrEmpty(Model.Birth_Cert_Path2))
                        {
                            var extension = System.IO.Path.GetExtension(Model.Birth_Cert_Path2)?.ToLower();
                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                            {
                                <img src="@Url.Content(Model.Birth_Cert_Path2)" alt="@Model.Birth_Cert2" class="img-fluid" />
                            }
                            else
                            {
                                <input type="text" value="Non-image file: @Model.Birth_Cert2" readonly class="form-control w-full" />
                            }
                        }
                        else
                        {
                            <input type="text" value="No file uploaded" readonly class="form-control w-full" />
                        }
                    </div>

                    <!-- Valid ID -->
                    <div class="document-item">
                        <label><i class="ri-id-card-line"></i> Valid ID</label>
                        @if (!string.IsNullOrEmpty(Model.Valid_ID_Path2))
                        {
                            var extension = System.IO.Path.GetExtension(Model.Valid_ID_Path2)?.ToLower();
                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                            {
                                <img src="@Url.Content(Model.Valid_ID_Path2)" alt="@Model.Valid_ID2" class="img-fluid" />
                            }
                            else
                            {
                                <input type="text" value="Non-image file: @Model.Valid_ID2" readonly class="form-control w-full" />
                            }
                        }
                        else
                        {
                            <input type="text" value="No file uploaded" readonly class="form-control w-full" />
                        }
                    </div>

                    <!-- 1x1 Picture -->
                    <div class="document-item">
                        <label><i class="ri-image-line"></i> 1x1 Picture</label>
                        @if (!string.IsNullOrEmpty(Model.x1_Pic_Path2))
                        {
                            var extension = System.IO.Path.GetExtension(Model.x1_Pic_Path2)?.ToLower();
                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                            {
                                <img src="@Url.Content(Model.x1_Pic_Path2)" alt="@Model.x1_Pic2" class="img-fluid" />
                            }
                            else
                            {
                                <input type="text" value="Non-image file: @Model.x1_Pic2" readonly class="form-control w-full" />
                            }
                        }
                        else
                        {
                            <input type="text" value="No file uploaded" readonly class="form-control w-full" />
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="action-buttons flex justify-center gap-4 mt-6">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="px-6 py-2.5 bg-yellow-500 text-white font-medium rounded-button flex items-center hover:bg-yellow-600 transition">
                <i class="ri-edit-line mr-1"></i> Edit
            </a>
            <a asp-action="Index" class="px-6 py-2.5 bg-gray-500 text-white font-medium rounded-button flex items-center hover:bg-gray-600 transition">
                <i class="ri-arrow-left-line mr-1"></i> Back to List
            </a>
        </div>

        <!-- Process Consultation Card (Staff1 or Admin) -->
        @if (User.IsInRole("Staff1") || User.IsInRole("Admin"))
        {
            <div class="card bg-white mt-6">
                <div class="bg-primary text-white px-6 py-4 rounded-t-lg">
                    <h5 class="text-lg font-medium flex items-center">
                        <i class="ri-checkbox-circle-line mr-2"></i> Process Consultation
                    </h5>
                    <!-- Success Alert -->
                    <div id="successAlert" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mt-4" role="alert">
                        Consultation submitted successfully!
                    </div>
                </div>
                <div class="card-body p-6">
                    <form asp-action="UpdateStatus" method="post" class="text-center flex justify-center gap-4" id="UpdateStatus" onsubmit="return handleSubmit(event)">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="submit" name="status" value="Process" class="px-6 py-2.5 bg-green-500 text-white font-medium rounded-button flex items-center hover:bg-green-600 transition">
                            <i class="ri-check-line mr-1"></i> Accept
                        </button>
                        <button type="submit" name="status" value="Rejected" class="px-6 py-2.5 bg-red-500 text-white font-medium rounded-button flex items-center hover:bg-red-600 transition">
                            <i class="ri-close-line mr-1"></i> Reject
                        </button>
                    </form>
                </div>
            </div>
        }

        <!-- Accept Consultation Card (Staff2 or Admin) -->
        @if (User.IsInRole("Staff2") || User.IsInRole("Admin"))
        {
            <div class="card bg-white mt-6">
                <div class="bg-primary text-white px-6 py-4 rounded-t-lg">
                    <h5 class="text-lg font-medium flex items-center">
                        <i class="ri-checkbox-circle-line mr-2"></i> Accept Consultation
                    </h5>
                    <!-- Success Alert -->
                    <div id="successAlert" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mt-4" role="alert">
                        Consultation submitted successfully!
                    </div>
                </div>
                <div class="card-body p-6">
                    <form asp-action="UpdateStatus1" method="post" class="text-center flex justify-center gap-4" id="UpdateStatus1" onsubmit="return handleSubmit(event)">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <button type="submit" name="status" value="Accepted" class="px-6 py-2.5 bg-green-500 text-white font-medium rounded-button flex items-center hover:bg-green-600 transition">
                            <i class="ri-check-line mr-1"></i> Accept
                        </button>
                        <button type="submit" name="status" value="Rejected" class="px-6 py-2.5 bg-red-500 text-white font-medium rounded-button flex items-center hover:bg-red-600 transition">
                            <i class="ri-close-line mr-1"></i> Reject
                        </button>
                    </form>
                </div>
            </div>
        }
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
            function handleSubmit(event) {
                // Check if the form is valid
                if (document.getElementById("UpdateStatus").checkValidity()) {
                    // Show success alert
                    document.getElementById("successAlert").classList.remove("d-none");

                    // Optionally, you can hide the alert after a few seconds
                    setTimeout(function() {
                        document.getElementById("successAlert").classList.add("d-none");
                    }, 3000);

                    return true; // Allow form submission
                } else {
                    event.preventDefault(); // Prevent form submission if not valid
                    return false;
                }
            }

            function handleSubmit(event) {
                // Check if the form is valid
                if (document.getElementById("UpdateStatus1").checkValidity()) {
                    // Show success alert
                    document.getElementById("successAlert").classList.remove("d-none");

                    // Optionally, you can hide the alert after a few seconds
                    setTimeout(function() {
                        document.getElementById("successAlert").classList.add("d-none");
                    }, 3000);

                    return true; // Allow form submission
                } else {
                    event.preventDefault(); // Prevent form submission if not valid
                    return false;
                }
            }
        </script>
    }
</body>
</html>