@model IEnumerable<SocialWelfarre.Models.FoodPackInventory>

@{
    ViewData["Title"] = "Food Pack Inventory Dashboard";
    Layout = "/Views/Shared/_DashboardLayout.cshtml";

    // Handle null Model by providing an empty collection
    var model = Model ?? Enumerable.Empty<SocialWelfarre.Models.FoodPackInventory>();

    // Compute metrics for cards
    var totalStocks = model.Sum(x => x.StockLeft); // Sum of StockLeft (remaining stocks)
    var stocksLeft = model.Sum(x => x.StockLeft); // Sum of StockLeft (remaining stocks)
    var totalAddedStocks = model.Sum(x => x.Packs); // Sum of Packs (allocated packs)
    var totalTransactions = model.Count(); // Count of inventory entries

    // Compute top 10 barangays by request frequency
    var topBarangays = model
        .GroupBy(x => x.Barangay)
        .Select(g => new { Barangay = g.Key, RequestCount = g.Count() })
        .OrderByDescending(x => x.RequestCount)
        .Take(10)
        .ToList();

    // Prepare chart data
    var barangayCounts = model
        .GroupBy(x => x.Barangay)
        .Select(g => new { Barangay = g.Key, StockLeft = g.Sum(x => x.StockLeft) })
        .ToList();
    var barangays = barangayCounts.Select(x => x.Barangay.ToString()).ToList();
    var stockLeftData = barangayCounts.Select(x => x.StockLeft).ToList();
    var totalStockLeft = stockLeftData.Sum() > 0 ? stockLeftData.Sum() : 1; // Avoid division by zero
    var percentages = stockLeftData.Select(x => Math.Round((x / (double)totalStockLeft) * 100, 1)).ToList();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Food Pack Inventory Dashboard</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: { primary: "#2563eb", secondary: "#60a5fa" },
                    borderRadius: {
                        none: "0px",
                        sm: "4px",
                        DEFAULT: "8px",
                        md: "12px",
                        lg: "16px",
                        xl: "20px",
                        "2xl": "24px",
                        "3xl": "32px",
                        full: "9999px",
                        button: "8px",
                    },
                },
            },
        };
    </script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Pacifico&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0/dist/chartjs-plugin-datalabels.min.js"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f9fafb;
        }
        .card-gradient {
            background: linear-gradient(135deg, #3b82f6 0%, #1e40af 100%);
        }
        .table-header {
            background-color: #f3f4f6;
        }
        .table-row:nth-child(even) {
            background-color: #f9fafb;
        }
        .table-row:nth-child(odd) {
            background-color: #ffffff;
        }
        .table-row:hover {
            background-color: #eff6ff;
        }
        .chart-container {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 10px;
            padding: 10px;
            box-shadow: 0 3px 15px rgba(0, 0, 0, 0.1);
            width: 100%;
            height: 250px;
            overflow-x: auto;
            overflow-y: auto;
        }
        canvas#stockDistributionChart {
            width: 100% !important;
            max-height: 220px;
            min-width: 0;
        }
    </style>
</head>
<body class="min-h-screen flex flex-col">
    <!-- Main Content -->
    <main class="flex-grow container mx-auto px-4 py-6">
        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <!-- Total Stocks -->
            <div class="card-gradient rounded shadow-lg p-6 text-white relative overflow-hidden">
                <div class="absolute top-0 right-0 w-24 h-24 transform translate-x-8 -translate-y-8 bg-white bg-opacity-10 rounded-full"></div>
                <div class="flex flex-col items-center justify-center text-center relative z-10">
                    <div class="w-12 h-12 flex items-center justify-center bg-white bg-opacity-20 rounded-full mb-3">
                        <i class="ri-store-2-line ri-lg"></i>
                    </div>
                    <h2 class="text-4xl font-bold mb-1">@totalStocks</h2>
                    <p class="text-sm text-white text-opacity-80">Total Stocks</p>
                </div>
            </div>
            <!-- Stocks Left -->
            <div class="card-gradient rounded shadow-lg p-6 text-white relative overflow-hidden">
                <div class="absolute top-0 right-0 w-24 h-24 transform translate-x-8 -translate-y-8 bg-white bg-opacity-10 rounded-full"></div>
                <div class="flex flex-col items-center justify-center text-center relative z-10">
                    <div class="w-12 h-12 flex items-center justify-center bg-white bg-opacity-20 rounded-full mb-3">
                        <i class="ri-box-line ri-lg"></i>
                    </div>
                    <h2 class="text-4xl font-bold mb-1">@stocksLeft</h2>
                    <p class="text-sm text-white text-opacity-80">Stocks Left</p>
                </div>
            </div>
            <!-- Total Added Stocks -->
            <div class="card-gradient rounded shadow-lg p-6 text-white relative overflow-hidden">
                <div class="absolute top-0 right-0 w-24 h-24 transform translate-x-8 -translate-y-8 bg-white bg-opacity-10 rounded-full"></div>
                <div class="flex flex-col items-center justify-center text-center relative z-10">
                    <div class="w-12 h-12 flex items-center justify-center bg-white bg-opacity-20 rounded-full mb-3">
                        <i class="ri-add-box-line ri-lg"></i>
                    </div>
                    <h2 class="text-4xl font-bold mb-1">@totalAddedStocks</h2>
                    <p class="text-sm text-white text-opacity-80">Total Allocated Packs</p>
                </div>
            </div>
            <!-- Total Transactions -->
            <div class="card-gradient rounded shadow-lg p-6 text-white relative overflow-hidden">
                <div class="absolute top-0 right-0 w-24 h-24 transform translate-x-8 -translate-y-8 bg-white bg-opacity-10 rounded-full"></div>
                <div class="flex flex-col items-center justify-center text-center relative z-10">
                    <div class="w-12 h-12 flex items-center justify-center bg-white bg-opacity-20 rounded-full mb-3">
                        <i class="ri-exchange-line ri-lg"></i>
                    </div>
                    <h2 class="text-4xl font-bold mb-1">@totalTransactions</h2>
                    <p class="text-sm text-white text-opacity-80">Total Transactions</p>
                </div>
            </div>
        </div>

        <!-- Chart and Top Barangays -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
            <!-- Stock Distribution Chart -->
            <div class="bg-white rounded shadow-md p-5 lg:col-span-2">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-lg font-semibold text-gray-800">Stock Distribution</h3>
                </div>
                <div class="chart-container">
                    <canvas id="stockDistributionChart"></canvas>
                </div>
            </div>
            <!-- Top 10 Most Requested Barangays -->
            <div class="bg-white rounded shadow-md p-5">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                        <i class="ri-map-pin-line mr-2 text-primary"></i>
                        Top Requested Barangays
                    </h3>
                    <button class="text-primary hover:text-blue-700 text-sm">View All</button>
                </div>
                <div class="overflow-hidden">
                    <div class="overflow-x-auto">
                        <table class="min-w-full">
                            <thead>
                                <tr class="text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    <th class="py-3 px-4">Barangay</th>
                                    <th class="py-3 px-4 text-right">Requests</th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200">
                                @foreach (var item in topBarangays)
                                {
                                    <tr class="table-row">
                                        <td class="py-2 px-4 text-sm text-gray-800">@item.Barangay</td>
                                        <td class="py-2 px-4 text-sm text-gray-800 text-right">
                                            <span class="inline-block bg-blue-100 text-primary px-2 py-1 rounded-full text-xs font-medium">@item.RequestCount</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Inventory Table -->
        <div class="bg-white rounded shadow-md overflow-hidden mb-8">
            <div class="p-5 border-b border-gray-200">
                <div class="flex flex-wrap items-center justify-between">
                    <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                        <i class="ri-box-3-line mr-2 text-primary"></i>
                        Food Pack Inventory
                    </h3>
                    <div class="flex items-center space-x-3 mt-2 sm:mt-0">
                        <div class="relative">
                            <input type="text" placeholder="Search inventory..." class="py-2 px-4 pr-10 rounded-button border border-gray-200 text-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-opacity-50" />
                            <div class="absolute right-3 top-1/2 transform -translate-y-1/2 w-5 h-5 flex items-center justify-center text-gray-500">
                                <i class="ri-search-line"></i>
                            </div>
                        </div>
                        <a asp-action="AddStock" class="bg-primary text-white py-2 px-4 rounded-button text-sm hover:bg-opacity-90 transition !rounded-button whitespace-nowrap">
                            <i class="ri-add-line mr-1"></i> Add Stock
                        </a>
                    </div>
                </div>
            </div>
            <div class="overflow-x-auto">
                <table class="min-w-full">
                    <thead class="bg-gray-50 border-b border-gray-200">
                        <tr>
                            <th class="py-3 px-6 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <div class="flex items-center cursor-pointer">
                                    Barangay
                                    <i class="ri-arrow-down-s-line ml-1"></i>
                                </div>
                            </th>
                            <th class="py-3 px-6 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <div class="flex items-center cursor-pointer">
                                    Number of Packs
                                    <i class="ri-arrow-down-s-line ml-1"></i>
                                </div>
                            </th>
                            <th class="py-3 px-6 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <div class="flex items-center cursor-pointer">
                                    Total Packs
                                    <i class="ri-arrow-down-s-line ml-1"></i>
                                </div>
                            </th>
                            <th class="py-3 px-6 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <div class="flex items-center cursor-pointer">
                                    Stock Left
                                    <i class="ri-arrow-down-s-line ml-1"></i>
                                </div>
                            </th>
                            <th class="py-3 px-6 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                <div class="flex items-center cursor-pointer">
                                    Request Date
                                    <i class="ri-arrow-down-s-line ml-1"></i>
                                </div>
                            </th>
                            <th class="py-3 px-6 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200">
                        @foreach (var item in model)
                        {
                            <tr class="table-row">
                                <td class="py-4 px-6 text-sm text-gray-800">
                                    <div class="flex items-center">
                                        <div class="w-8 h-8 flex items-center justify-center bg-blue-100 rounded-full mr-3">
                                            <i class="ri-map-pin-line text-primary"></i>
                                        </div>
                                        @Html.DisplayFor(modelItem => item.Barangay)
                                    </div>
                                </td>
                                <td class="py-4 px-6 text-sm text-gray-800">@Html.DisplayFor(modelItem => item.Packs)</td>
                                <td class="py-4 px-6 text-sm text-gray-800">@Html.DisplayFor(modelItem => item.TotalPacks)</td>
                                <td class="py-4 px-6 text-sm">
                                    <div class="flex items-center">
                                        <div class="w-full bg-gray-200 rounded-full h-2 mr-2">
                                            <div class="bg-primary h-2 rounded-full" style="width: @(item.TotalPacks > 0 ? (item.StockLeft * 100 / item.TotalPacks) : 0)%"></div>
                                        </div>
                                        <span class="text-gray-800">@Html.DisplayFor(modelItem => item.StockLeft)</span>
                                    </div>
                                </td>
                                <td class="py-4 px-6 text-sm text-gray-800">@Html.DisplayFor(modelItem => item.RequestDate)</td>
                                <td class="py-4 px-6 text-sm text-right">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="text-gray-500 hover:text-primary mr-3">
                                        <i class="ri-eye-line"></i>
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="text-gray-500 hover:text-primary mr-3">
                                        <i class="ri-edit-line"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="text-gray-500 hover:text-red-500">
                                        <i class="ri-delete-bin-line"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="px-5 py-4 border-t border-gray-200 flex flex-wrap items-center justify-between">
                <div class="text-sm text-gray-700 mb-2 sm:mb-0">
                  
                </div>
                <div class="flex space-x-1">
                    <button class="bg-gray-100 text-gray-700 py-1 px-3 rounded-button text-sm hover:bg-gray-200 transition !rounded-button whitespace-nowrap disabled:opacity-50" disabled>Previous</button>
                    <button class="bg-primary text-white py-1 px-3 rounded-button text-sm hover:bg-opacity-90 transition !rounded-button whitespace-nowrap">1</button>
                    <button class="bg-gray-100 text-gray-700 py-1 px-3 rounded-button text-sm hover:bg-gray-200 transition !rounded-button whitespace-nowrap">2</button>
                    <button class="bg-gray-100 text-gray-700 py-1 px-3 rounded-button text-sm hover:bg-gray-200 transition !rounded-button whitespace-nowrap">Next</button>
                </div>
            </div>
        </div>
    </main>

    @section Scripts {
        <script>
            // Register Chart.js Data Labels plugin
            Chart.register(ChartDataLabels);

            // Pastel color palette
            const pastelColorPalette = [
                '#a3bffa', '#f4a8a8', '#b5e4ca', '#f9d5a7', '#c3a6e4',
                '#f5a9cb', '#9ee4f5', '#d4e4a3', '#f9c4a7', '#b5d4f5'
            ];

            function initializeCharts() {
                // Stock Distribution Chart (Bar)
                const ctxDistribution = document.getElementById('stockDistributionChart').getContext('2d');
                new Chart(ctxDistribution, {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Json.Serialize(barangays)),
                        datasets: [{
                            label: 'Stock Left',
                            data: @Html.Raw(Json.Serialize(stockLeftData)),
                            backgroundColor: pastelColorPalette,
                            borderColor: pastelColorPalette,
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: { display: false },
                            datalabels: {
                                anchor: 'end',
                                align: 'top',
                                formatter: function(value, context) {
                                    const percentages = @Html.Raw(Json.Serialize(percentages));
                                    return percentages[context.dataIndex] + '%';
                                },
                                color: '#1f2937',
                                font: { weight: 'bold' }
                            }
                        },
                        scales: {
                            x: {
                                grid: { display: false },
                                ticks: { color: '#1f2937' }
                            },
                            y: {
                                beginAtZero: true,
                                grid: { color: '#e2e8f0' },
                                ticks: { color: '#1f2937' }
                            }
                        }
                    }
                });
            }

            // Initialize charts if data is available
            if (@(model.Any() ? "true" : "false")) {
                initializeCharts();
            }
        </script>
    }
</body>
</html>