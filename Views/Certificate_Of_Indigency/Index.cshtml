@model IEnumerable<SocialWelfarre.Models.Certificate_Of_Indigency>
@using System.IO

@{
    ViewData["Title"] = "Certificate of Indigency Requests";
    Layout = "/Views/Shared/_DashboardLayout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Certificate of Indigency Request</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <script>
        tailwind.config = {
          theme: {
            extend: {
              colors: { primary: "#4263eb", secondary: "#829af1" },
              borderRadius: {
                none: "0px",
                sm: "4px",
                DEFAULT: "8px",
                md: "12px",
                lg: "16px",
                xl: "20px",
                "2xl": "24px",
                "3xl": "32px",
                full: "9999px",
                button: "8px",
              },
            },
          },
        };
    </script>
   
    <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap"
          rel="stylesheet" />
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css" />
    <style>
        :where([class^="ri-"])::before {
            content: "\f3c2";
        }

        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        input[type="number"] {
            -moz-appearance: textfield;
        }

        .badge {
            padding: 0.25em 0.6em;
            font-size: 75%;
            font-weight: 700;
            line-height: 1;
            text-align: center;
            white-space: nowrap;
            vertical-align: baseline;
            border-radius: 10rem;
        }

        .bg-success {
            background-color: #d1fae5 !important;
            color: #065f46 !important;
        }

        .bg-warning {
            background-color: #fef3c7 !important;
            color: #92400e !important;
        }

        .bg-primary {
            background-color: #dbeafe !important;
            color: #1e40af !important;
        }

        .bg-danger {
            background-color: #fee2e2 !important;
            color: #991b1b !important;
        }

        .bg-secondary {
            background-color: #e5e7eb !important;
            color: #1f2937 !important;
        }
    </style>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <!-- Request Form Section -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <div class="flex items-center gap-3 mb-6 border-b pb-4">
                <div class="w-8 h-8 flex items-center justify-center bg-primary text-white rounded-full">
                    <i class="ri-file-list-3-line"></i>
                </div>
                <h1 class="text-xl font-semibold text-gray-800">
                    Request Certificate of Indigency
                </h1>
            </div>
            <!-- Success Alert -->
            <div id="successAlert" class="hidden mb-4 p-4 bg-green-100 text-green-700 rounded">
                Consultation submitted successfully!
            </div>
            <form asp-action="Create" method="post" enctype="multipart/form-data" id="Create" onsubmit="return handleSubmit(event)">
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="text-red-500 mb-4"></div>

                <!-- Personal Information -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-user-line text-gray-500 mr-1"></i> First Name
                            <span class="text-red-500">*</span>
                        </label>
                        <input asp-for="@(new SocialWelfarre.Models.Certificate_Of_Indigency().FirstName1)"
                               type="text"
                               placeholder="Enter First Name"
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary"
                               required />
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-user-line text-gray-500 mr-1"></i> Middle Name
                            <span class="text-red-500">*</span>
                        </label>
                        <input asp-for="@(new SocialWelfarre.Models.Certificate_Of_Indigency().MiddleName1)"
                               type="text"
                               placeholder="Enter Middle Name"
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary"
                               required />
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-user-line text-gray-500 mr-1"></i> Last Name
                            <span class="text-red-500">*</span>
                        </label>
                        <input asp-for="@(new SocialWelfarre.Models.Certificate_Of_Indigency().LastName1)"
                               type="text"
                               placeholder="Enter Last Name"
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary"
                               required />
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-calendar-line text-gray-500 mr-1"></i> Age
                            <span class="text-red-500">*</span>
                        </label>
                        <input asp-for="@(new SocialWelfarre.Models.Certificate_Of_Indigency().Age1)"
                               type="number"
                               placeholder="0"
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary"
                               required />
                    </div>
                </div>
                <!-- Contact Information -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-phone-line text-gray-500 mr-1"></i> Contact Number
                            <span class="text-red-500">*</span>
                        </label>
                        <input asp-for="@(new SocialWelfarre.Models.Certificate_Of_Indigency().ContactNumber1)"
                               type="text"
                               placeholder="Enter Contact Number"
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary"
                               required />
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-file-list-line text-gray-500 mr-1"></i> Request
                            <span class="text-red-500">*</span>
                        </label>
                        <input asp-for="@(new SocialWelfarre.Models.Certificate_Of_Indigency().No_Rquested1)"
                               type="number"
                               placeholder="0"
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary"
                               required />
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-map-pin-line text-gray-500 mr-1"></i> Address
                            <span class="text-red-500">*</span>
                        </label>
                        <input asp-for="@(new SocialWelfarre.Models.Certificate_Of_Indigency().Address1)"
                               type="text"
                               placeholder="Enter Address"
                               class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary"
                               required />
                    </div>
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-building-line text-gray-500 mr-1"></i> Barangay
                            <span class="text-red-500">*</span>
                        </label>
                        <div class="relative">
                            <select asp-for="@(new SocialWelfarre.Models.Certificate_Of_Indigency().Barangay1)"
                                    class="w-full px-4 py-2 border border-gray-300 rounded appearance-none focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary pr-8"
                                    required>
                                <option value="">Select Barangay</option>
                                @foreach (var barangay in Html.GetEnumSelectList<Barangay1>())
                                {
                                    <option value="@barangay.Value">@barangay.Text</option>
                                }
                            </select>
                            <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                                <i class="ri-arrow-down-s-line text-gray-500"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Reason -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
                    <div class="col-span-1">
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-question-line text-gray-500 mr-1"></i> Reason
                            <span class="text-red-500">*</span>
                        </label>
                        <div class="relative">
                            <select asp-for="@(new SocialWelfarre.Models.Certificate_Of_Indigency().Reason1)"
                                    class="w-full px-4 py-2 border border-gray-300 rounded appearance-none focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary pr-8"
                                    required>
                                <option value="">Select Reason</option>
                                @foreach (var reason in Html.GetEnumSelectList<Reason1>())
                                {
                                    <option value="@reason.Value">@reason.Text</option>
                                }
                            </select>
                            <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                                <i class="ri-arrow-down-s-line text-gray-500"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Document Upload -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-file-upload-line text-gray-500 mr-1"></i> Barangay
                            Certificate <span class="text-red-500">*</span>
                        </label>
                        <div class="flex">
                            <div id="brgyCertFileName"
                                 class="flex-grow border border-gray-300 rounded-l px-4 py-2 bg-gray-50 text-gray-500 text-sm overflow-hidden whitespace-nowrap">
                                No file chosen
                            </div>
                            <button type="button"
                                    onclick="document.getElementById('brgyCertFile').click()"
                                    class="flex items-center justify-center px-4 py-2 bg-primary text-white rounded-r hover:bg-primary/90 transition !rounded-button whitespace-nowrap">
                                <i class="ri-upload-2-line mr-1"></i> Browse
                            </button>
                        </div>
                        <input type="file" class="hidden" id="brgyCertFile" name="brgyCertFile" accept=".jpg,.jpeg,.png,.pdf" required
                               onchange="document.getElementById('brgyCertFileName').textContent = this.files[0] ? this.files[0].name : 'No file chosen'" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">
                            <i class="ri-id-card-line text-gray-500 mr-1"></i> Valid ID
                            <span class="text-red-500">*</span>
                        </label>
                        <div class="flex">
                            <div id="validIdFileName"
                                 class="flex-grow border border-gray-300 rounded-l px-4 py-2 bg-gray-50 text-gray-500 text-sm overflow-hidden whitespace-nowrap">
                                No file chosen
                            </div>
                            <button type="button"
                                    onclick="document.getElementById('validIdFile').click()"
                                    class="flex items-center justify-center px-4 py-2 bg-primary text-white rounded-r hover:bg-primary/90 transition !rounded-button whitespace-nowrap">
                                <i class="ri-upload-2-line mr-1"></i> Browse
                            </button>
                        </div>
                        <input type="file" class="hidden" id="validIdFile" name="validIdFile" accept=".jpg,.jpeg,.png,.pdf" required
                               onchange="document.getElementById('validIdFileName').textContent = this.files[0] ? this.files[0].name : 'No file chosen'" />
                    </div>
                </div>
                <!-- Submit Button -->
                <div>
                    <button type="submit"
                            class="px-6 py-2.5 bg-primary text-white font-medium rounded shadow-sm hover:bg-primary/90 transition flex items-center !rounded-button whitespace-nowrap">
                        <i class="ri-add-line mr-1"></i> ADD APPLICATION
                    </button>
                </div>
            </form>
        </div>

        @using Newtonsoft.Json
        @{
            var pendingStatus = ActiveStatus1.Pending.ToString();
            var acceptedStatus = ActiveStatus1.Approved.ToString();
            var rejectedStatus = ActiveStatus1.Denied.ToString();
            var processStatus = ActiveStatus1.Process.ToString();
            var nullStatus = "Null";
            var statuses = new[] { pendingStatus, acceptedStatus, processStatus, rejectedStatus };
        }

        <!-- Applications Section -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <!-- Tabs -->
            <div class="flex border-b mb-4">
                @foreach (var status in statuses)
                {
                    var tabId = status.ToLowerInvariant().Replace(" ", "-");
                    var isActive = (status == pendingStatus) ? "border-b-2 border-primary text-primary font-medium" : "text-gray-500 hover:text-gray-700";
                    var tabTitle = status switch
                    {
                        var s when s == pendingStatus => "Pending",
                        var s when s == acceptedStatus => "Approved",
                        var s when s == processStatus => "In Process",
                        var s when s == rejectedStatus => "Denied",
                        _ => "Tab"
                    };
                    <button id="@tabId-tab"
                            class="px-4 py-2 @isActive"
                            onclick="switchTab('@tabId', '@status')">
                        @tabTitle
                    </button>
                }
            </div>
            <h2 id="tableTitle" class="text-lg font-medium text-gray-800 mb-4">
                Pending Applications
            </h2>
            <!-- Table Controls -->
            <div class="flex justify-between items-center mb-4">
                <div class="flex items-center">
                    <span class="text-sm text-gray-600 mr-2">Show</span>
                    <div class="relative">
                        <select id="entriesPerPage"
                                class="appearance-none border border-gray-300 rounded px-3 py-1 pr-8 focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary">
                            <option>10</option>
                            <option>25</option>
                            <option>50</option>
                            <option>100</option>
                        </select>
                        <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
                            <i class="ri-arrow-down-s-line text-gray-500"></i>
                        </div>
                    </div>
                    <span class="text-sm text-gray-600 ml-2">entries</span>
                </div>
                <div class="relative">
                    <input type="text"
                           id="searchInput"
                           placeholder="Search..."
                           class="border border-gray-300 rounded pl-9 pr-4 py-2 focus:outline-none focus:ring-2 focus:ring-primary/50 focus:border-primary" />
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                        <i class="ri-search-line text-gray-500"></i>
                    </div>
                </div>
            </div>
            <!-- Applications Table -->
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Full Name
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Barangay
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Request No.
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Brgy. Cert. Path
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Valid ID Path
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Reason
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Status
                            </th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody id="applicationTableBody" class="bg-white divide-y divide-gray-200">
                        @foreach (var item in Model.Where(x => (Enum.GetName(typeof(ActiveStatus1), x.Status1) == pendingStatus) || (pendingStatus == nullStatus && x.Status1 == null)))
                        {
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @Html.DisplayFor(modelItem => item.FullName)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @Html.DisplayFor(modelItem => item.Barangay1)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @Html.DisplayFor(modelItem => item.No_Rquested1)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @if (!string.IsNullOrEmpty(item.Brgy_Cert_Path1))
                                    {
                                        var ext = System.IO.Path.GetExtension(item.Brgy_Cert_Path1)?.ToLower();
                                        if (ext is ".jpg" or ".jpeg" or ".png")
                                        {
                                            <img src="@Url.Content(item.Brgy_Cert_Path1)" width="100" />
                                        }
                                        else
                                        {
                                            <span>Non-image file</span>
                                        }
                                    }
                                    else
                                    {
                                        <span>No file</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @if (!string.IsNullOrEmpty(item.Valid_ID_Path1))
                                    {
                                        var ext = System.IO.Path.GetExtension(item.Valid_ID_Path1)?.ToLower();
                                        if (ext is ".jpg" or ".jpeg" or ".png")
                                        {
                                            <img src="@Url.Content(item.Valid_ID_Path1)" width="100" />
                                        }
                                        else
                                        {
                                            <span>Non-image file</span>
                                        }
                                    }
                                    else
                                    {
                                        <span>No file</span>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @Html.DisplayFor(modelItem => item.Reason1)
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @{
                                        var statusText = Enum.GetName(typeof(ActiveStatus1), item.Status1);
                                        string badgeClass = statusText switch
                                        {
                                            var s when s == pendingStatus => "bg-yellow-100 text-yellow-800",
                                            var s when s == acceptedStatus => "bg-green-100 text-green-800",
                                            var s when s == processStatus => "bg-blue-100 text-blue-800",
                                            var s when s == rejectedStatus => "bg-red-100 text-red-800",
                                            _ => "bg-gray-100 text-gray-800"
                                        };
                                    }
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full @badgeClass">@statusText</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                                    @{
                                        bool isAdmin = User.IsInRole("Admin");
                                        bool isStaff1 = User.IsInRole("Staff1");
                                        bool isStaff2 = User.IsInRole("Staff2");
                                        var currentStatus = Enum.GetName(typeof(ActiveStatus1), item.Status1);
                                        bool showActions =
                                        (currentStatus == pendingStatus && (isAdmin || isStaff1)) ||
                                        (currentStatus == processStatus && (isAdmin || isStaff2));
                                    }

                                    <div class="flex space-x-2">
                                        @if (showActions)
                                        {
                                            <a asp-action="Details" asp-route-id="@item.Id" class="w-8 h-8 flex items-center justify-center text-blue-600 hover:bg-blue-50 rounded-full">
                                                <i class="ri-eye-line"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="w-8 h-8 flex items-center justify-center text-yellow-600 hover:bg-yellow-50 rounded-full">
                                                <i class="ri-edit-line"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-gray-400">No actions</span>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- Pagination -->
            <div class="flex items-center justify-between mt-4">
                <div class="text-sm text-gray-700">
                    Showing <span class="font-medium">1</span> to
                    <span class="font-medium">10</span> of
                    <span class="font-medium">@Model.Count()</span> entries
                </div>
                <div class="flex space-x-1">
                    <button class="px-3 py-1 border border-gray-300 rounded-l bg-white text-gray-500 hover:bg-gray-50 disabled:opacity-50"
                            disabled>
                        Previous
                    </button>
                    <button class="px-3 py-1 border border-gray-300 bg-primary text-white">
                        1
                    </button>
                    <button class="px-3 py-1 border border-gray-300 rounded-r bg-white text-gray-500 hover:bg-gray-50 disabled:opacity-50"
                            disabled>
                        Next
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script>
        // Store all applications data for filtering
        const allApplications = @Html.Raw(JsonConvert.SerializeObject(Model.Select(item => new
            {
                Id = item.Id,
                FullName = item.FullName,
                Barangay = item.Barangay1.ToString(),
                RequestNo = item.No_Rquested1,
                BrgyCertPath = item.Brgy_Cert_Path1,
                ValidIdPath = item.Valid_ID_Path1,
                Reason = item.Reason1.ToString(),
                Status = Enum.GetName(typeof(ActiveStatus1), item.Status1),
                StatusValue = item.Status1
            })));

        function switchTab(tabId, status) {
          // Update active tab styling
          document.querySelectorAll('[id$="-tab"]').forEach(tab => {
            tab.classList.remove('border-b-2', 'border-primary', 'text-primary', 'font-medium');
            tab.classList.add('text-gray-500', 'hover:text-gray-700');
          });
          document.getElementById(`${tabId}-tab`).classList.add('border-b-2', 'border-primary', 'text-primary', 'font-medium');
          document.getElementById(`${tabId}-tab`).classList.remove('text-gray-500', 'hover:text-gray-700');

          // Update table title
          const tabTitle = status === 'Pending' ? 'Pending Applications' :
                           status === 'Approved' ? 'Approved Applications' :
                           status === 'Process' ? 'In Process Applications' :
                           'Denied Applications';
          document.getElementById('tableTitle').textContent = tabTitle;

          // Filter applications by status
          const filteredApplications = allApplications.filter(app =>
            app.Status === status || (status === 'Null' && app.Status === null)
          );

          // Update table content
          const tableBody = document.getElementById('applicationTableBody');
          tableBody.innerHTML = '';

          filteredApplications.forEach(app => {
            const statusText = app.Status || 'Null';
            const badgeClass =
              statusText === 'Pending' ? 'bg-yellow-100 text-yellow-800' :
              statusText === 'Approved' ? 'bg-green-100 text-green-800' :
              statusText === 'Process' ? 'bg-blue-100 text-blue-800' :
              statusText === 'Denied' ? 'bg-red-100 text-red-800' :
              'bg-gray-100 text-gray-800';

            const isAdmin = @Json.Serialize(User.IsInRole("Admin"));
            const isStaff1 = @Json.Serialize(User.IsInRole("Staff1"));
            const isStaff2 = @Json.Serialize(User.IsInRole("Staff2"));

            const showActions =
              (statusText === 'Pending' && (isAdmin || isStaff1)) ||
              (statusText === 'Process' && (isAdmin || isStaff2));

            const actionsHtml = showActions ? `
              <div class="flex space-x-2">
                <a href="/Certificate_Of_Indigency/Details/${app.Id}" class="w-8 h-8 flex items-center justify-center text-blue-600 hover:bg-blue-50 rounded-full">
                  <i class="ri-eye-line"></i>
                </a>
                <a href="/Certificate_Of_Indigency/Edit/${app.Id}" class="w-8 h-8 flex items-center justify-center text-yellow-600 hover:bg-yellow-50 rounded-full">
                  <i class="ri-edit-line"></i>
                </a>
              </div>
            ` : '<span class="text-gray-400">No actions</span>';

            const brgyCertHtml = app.BrgyCertPath ?
              (app.BrgyCertPath.toLowerCase().endsWith('.jpg') ||
               app.BrgyCertPath.toLowerCase().endsWith('.jpeg') ||
               app.BrgyCertPath.toLowerCase().endsWith('.png') ?
                `<img src="${app.BrgyCertPath}" width="100" />` :
                'Non-image file') :
              'No file';

            const validIdHtml = app.ValidIdPath ?
              (app.ValidIdPath.toLowerCase().endsWith('.jpg') ||
               app.ValidIdPath.toLowerCase().endsWith('.jpeg') ||
               app.ValidIdPath.toLowerCase().endsWith('.png') ?
                `<img src="${app.ValidIdPath}" width="100" />` :
                'Non-image file') :
              'No file';

            const row = document.createElement('tr');
            row.innerHTML = `
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${app.FullName}</td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${app.Barangay}</td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${app.RequestNo}</td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${brgyCertHtml}</td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${validIdHtml}</td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">${app.Reason}</td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${badgeClass}">${statusText}</span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                ${actionsHtml}
              </td>
            `;
            tableBody.appendChild(row);
          });

          // Update pagination info
          document.querySelector('.text-sm.text-gray-700').innerHTML = `
            Showing <span class="font-medium">1</span> to
            <span class="font-medium">${filteredApplications.length}</span> of
            <span class="font-medium">${filteredApplications.length}</span> entries
          `;
        }

        function handleSubmit(event) {
          // Check if the form is valid
          if (document.getElementById("Create").checkValidity()) {
            // Show success alert
            document.getElementById("successAlert").classList.remove("hidden");

            // Optionally, you can hide the alert after a few seconds
            setTimeout(function() {
              document.getElementById("successAlert").classList.add("hidden");
            }, 3000);

            return true; // Allow form submission
          } else {
            event.preventDefault(); // Prevent form submission if not valid
            return false;
          }
        }

        // Initialize search functionality
        document.getElementById('searchInput').addEventListener('input', function() {
          const searchTerm = this.value.toLowerCase();
          const rows = document.querySelectorAll('#applicationTableBody tr');

          rows.forEach(row => {
            const text = row.textContent.toLowerCase();
            row.style.display = text.includes(searchTerm) ? '' : 'none';
          });
        });
    </script>
</body>
</html>