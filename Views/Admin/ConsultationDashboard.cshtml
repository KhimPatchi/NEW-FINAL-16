@model SocialWelfarre.Models.Consultation
@{
    ViewData["Title"] = "Consultation Dashboard";
    Layout = "/Views/Shared/_DashboardLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Consultation Dashboard</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <!-- Font Awesome for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <!-- Chart.js Data Labels Plugin -->
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0/dist/chartjs-plugin-datalabels.min.js"></script>
    <style>
        body {
            background-color: #f0f4f8;
            font-family: 'Poppins', sans-serif;
            color: #1f2937;
        }

        .dashboard-container {
            padding: 20px 10px;
            width: 100%;
            box-sizing: border-box;
        }

        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
            background: linear-gradient(135deg, #ffffff, #e6f0fa);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            width: 100%;
        }

            .card:hover {
                transform: translateY(-3px);
                box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
            }

        .card-header {
            background: linear-gradient(90deg, #1e40af, #60a5fa);
            color: #ffffff;
            font-size: 1.6rem;
            font-weight: 700;
            padding: 15px;
            border-radius: 15px 15px 0 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .card-body {
            padding: 20px;
            width: 100%;
        }

        .stat-card {
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 15px;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
            transition: transform 0.3s ease;
            min-height: 120px;
        }

            .stat-card:hover {
                transform: translateY(-2px);
            }

            .stat-card:nth-child(1) {
                background: linear-gradient(135deg, #1e40af, #60a5fa);
            }

            .stat-card:nth-child(2) {
                background: linear-gradient(135deg, #14b8a6, #6ee7b7);
            }

            .stat-card:nth-child(3) {
                background: linear-gradient(135deg, #7c3aed, #a78bfa);
            }

            .stat-card:nth-child(4) {
                background: linear-gradient(135deg, #f97316, #fb923c);
            }

            .stat-card i {
                font-size: 2rem;
                color: #ffffff;
                background: rgba(0, 0, 0, 0.2);
                padding: 10px;
                border-radius: 50%;
                width: 50px;
                height: 50px;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: transform 0.3s ease;
            }

            .stat-card:hover i {
                transform: scale(1.1);
            }

            .stat-card .stat-info h3 {
                font-size: 1.8rem;
                font-weight: 700;
                margin: 0;
                color: #ffffff;
            }

            .stat-card .stat-info p {
                font-size: 1rem;
                color: rgba(255, 255, 255, 0.8);
                margin: 0;
            }

        .chart-container, .line-chart-container {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 10px;
            padding: 10px;
            box-shadow: 0 3px 15px rgba(0, 0, 0, 0.1);
            width: 100%;
            height: 250px;
            position: relative; /* Ensure positioning context for children */
        }

        .chart-container {
            overflow-y: auto; /* Enable vertical scrolling for doughnut chart */
            overflow-x: auto; /* Enable horizontal scrolling in case of overflow */
        }

        .line-chart-container {
            overflow-x: auto; /* Enable horizontal scrolling for line chart */
            overflow-y: auto; /* Enable vertical scrolling in case of overflow */
        }

        canvas#statusChart, canvas#trendChart {
            width: 100% !important;
            max-height: 220px;
            /* Ensure canvas doesn't shrink unnecessarily */
            min-width: 0; /* Prevent flexbox from shrinking canvas */
        }

        canvas#trendChart {
            min-width: 600px; /* Ensure line chart has enough width to display all months */
        }

        .btn-primary {
            background-color: #1e40af;
            border: none;
            border-radius: 8px;
            padding: 8px 15px;
            font-size: 1rem;
            font-weight: 600;
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

            .btn-primary:hover {
                background-color: #1e3a8a;
                transform: translateY(-2px);
            }

        .btn-success {
            background-color: #14b8a6;
            border-radius: 8px;
            padding: 8px 15px;
            font-size: 1rem;
            font-weight: 600;
        }

            .btn-success:hover {
                background-color: #0d9488;
                transform: translateY(-2px);
            }

        .btn-info {
            background-color: #7c3aed;
            border-radius: 8px;
            padding: 8px 15px;
            font-size: 1rem;
            font-weight: 600;
        }

            .btn-info:hover {
                background-color: #6d28d9;
                transform: translateY(-2px);
            }

        .quick-links {
            margin-top: 30px;
        }

            .quick-links h4 {
                font-size: 1.6rem;
                font-weight: 700;
                color: #1f2937;
                margin-bottom: 15px;
            }

        .table-container {
            margin-top: 30px;
            background: linear-gradient(135deg, #1f2937, #374151);
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            padding: 20px;
            width: 100%;
        }

            .table-container h4 {
                font-size: 1.6rem;
                font-weight: 700;
                color: #ffffff;
                margin-bottom: 15px;
            }

        .table {
            margin-bottom: 0;
            font-size: 1rem;
            background: #ffffff;
            border-radius: 8px;
            overflow: hidden;
            width: 100%;
        }

            .table th {
                font-weight: 700;
                color: #ffffff;
                background: #1e40af;
                padding: 10px;
                font-size: 1.2rem;
            }

            .table td {
                vertical-align: middle;
                padding: 10px;
                font-size: 1rem;
                background: #ffffff;
            }

            .table tr:nth-child(even) td {
                background: #f9fafb;
            }

            .table tr:hover td {
                background: #e6f0fa;
                transition: background 0.3s ease;
            }

            .table img {
                border-radius: 8px;
                width: 60px;
            }

            .table .btn-sm {
                font-size: 0.9rem;
                padding: 5px 8px;
            }

        .nav-tabs {
            border-bottom: 2px solid #e5e7eb;
        }

            .nav-tabs .nav-link {
                color: #6b7280;
                font-weight: 700;
                padding: 8px 15px;
                border: none;
                border-bottom: 2px solid transparent;
                font-size: 1.2rem;
                transition: color 0.3s ease, border-color 0.3s ease;
            }

                .nav-tabs .nav-link:hover,
                .nav-tabs .nav-link.active {
                    color: #1e40af;
                    border-bottom: 2px solid #1e40af;
                    background: linear-gradient(90deg, #1e40af, #14b8a6);
                    -webkit-background-clip: text;
                    -webkit-text-fill-color: transparent;
                }

        .error-message {
            color: #ffffff;
            font-size: 1rem;
            margin-top: 15px;
            padding: 10px;
            background: linear-gradient(135deg, #ef4444, #f87171);
            border-radius: 8px;
            display: none;
        }

            .error-message::before {
                content: '\f071';
                font-family: 'Font Awesome 6 Free';
                font-weight: 900;
                margin-right: 6px;
            }

        .loading-message {
            color: #ffffff;
            font-size: 1rem;
            margin-top: 15px;
            padding: 10px;
            background: linear-gradient(135deg, #14b8a6, #06b6d4);
            border-radius: 8px;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .loading-message::before {
                content: '\f110';
                font-family: 'Font Awesome 6 Free';
                font-weight: 900;
                margin-right: 6px;
                animation: spin 1s linear infinite;
            }



        .card-header {
            font-size: 1.4rem;
            padding: 10px;
        }

        .card-body {
            padding: 15px;
        }

        .stat-card {
            padding: 10px;
            margin-bottom: 10px;
            min-height: 100px;
        }

            .stat-card i {
                width: 40px;
                height: 40px;
                font-size: 1.5rem;
            }

            .stat-card .stat-info h3 {
                font-size: 1.5rem;
            }

            .stat-card .stat-info p {
                font-size: 0.9rem;
            }

        .chart-container, .line-chart-container {
            padding: 8px;
            height: 200px;
        }

        canvas#statusChart, canvas#trendChart {
            max-height: 180px;
        }

        canvas#trendChart {
            min-width: 500px; /* Slightly smaller min-width for mobile */
        }

        .quick-links {
            margin-top: 20px;
        }

            .quick-links h4 {
                font-size: 1.4rem;
                margin-bottom: 10px;
            }

        .table-container {
            margin-top: 20px;
            padding: 15px;
        }

            .table-container h4 {
                font-size: 1.4rem;
                margin-bottom: 10px;
            }

        .table th, .table td {
            font-size: 0.9rem;
            padding: 8px;
        }

        .table img {
            width: 50px;
        }

        .table .btn-sm {
            font-size: 0.8rem;
            padding: 4px 6px;
        }

        .btn-primary, .btn-success, .btn-info {
            font-size: 0.9rem;
            padding: 6px 10px;
        }

        .nav-tabs .nav-link {
            font-size: 1rem;
            padding: 6px 12px;
        }

        }
    </style>
</head>
<body>

    <!-- Main Content Card -->
    <div class="card">

        <div class="card-body">
            <!-- Loading Message -->
            <div id="loadingMessage" class="loading-message">Loading data...</div>
            <!-- Statistics Cards -->
            <div class="row g-3">
                <div class="col-md-3 col-sm-6">
                    <div class="stat-card">
                        <i class="fas fa-hourglass-half"></i>
                        <div class="stat-info">
                            <h3 id="pendingCount">0</h3>
                            <p>Pending Consultations</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="stat-card">
                        <i class="fas fa-check-circle"></i>
                        <div class="stat-info">
                            <h3 id="approvedCount">0</h3>
                            <p>Approved Consultations</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="stat-card">
                        <i class="fas fa-times-circle"></i>
                        <div class="stat-info">
                            <h3 id="rejectedCount">0</h3>
                            <p>Denied Consultations</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="stat-card">
                        <i class="fas fa-boxes"></i>
                        <div class="stat-info">
                            <h3 id="totalCount">0</h3>
                            <p>Total Consultations</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Error Message -->
            <div id="errorMessage" class="error-message">Unable to load data. Please try again later.</div>

            <!-- Charts Section -->
            <div class="row g-3 mt-3">
                <div class="col-md-6 col-12">
                    <div class="chart-container">
                        <h4 class="mb-2" style="font-size: 1.4rem;">Status Distribution</h4>
                        <canvas id="statusChart"></canvas>
                    </div>
                </div>
                <div class="col-md-6 col-12">
                    <div class="line-chart-container">
                        <h4 class="mb-2" style="font-size: 1.4rem;">Trends Over Time</h4>
                        <canvas id="trendChart"></canvas>
                    </div>
                </div>
            </div>

          
            <!-- Consultations Table -->
            <div class="table-container">
                <h4 class="mb-3">Consultation Requests</h4>
                <ul class="nav nav-tabs" id="consultationTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a class="nav-link active" id="pending-tab" data-bs-toggle="tab" href="#pending" role="tab" aria-controls="pending" aria-selected="true">Pending</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="approved-tab" data-bs-toggle="tab" href="#approved" role="tab" aria-controls="approved" aria-selected="false">Approved</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="rejected-tab" data-bs-toggle="tab" href="#rejected" role="tab" aria-controls="rejected" aria-selected="false">Denied</a>
                    </li>
                </ul>
                <div class="tab-content" id="consultationTabContent">
                    <!-- Pending Tab -->
                    <div class="tab-pane fade show active" id="pending" role="tabpanel" aria-labelledby="pending-tab">
                        <table class="table table-striped table-bordered" id="pendingTable">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-user me-2"></i> Full Name</th>
                                    <th><i class="fas fa-phone me-2"></i> Contact</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Brgy Cert</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Solo Parent</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Birth Cert</th>
                                    <th><i class="fas fa-id-card me-2"></i> Valid ID</th>
                                    <th><i class="fas fa-image me-2"></i> 1x1 Pic</th>
                                    <th><i class="fas fa-calendar-alt me-2"></i> Date</th>
                                    <th><i class="fas fa-clock me-2"></i> Time</th>
                                    <th><i class="fas fa-info-circle me-2"></i> Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="pendingTableBody"></tbody>
                        </table>
                    </div>
                    <!-- Approved Tab -->
                    <div class="tab-pane fade" id="approved" role="tabpanel" aria-labelledby="approved-tab">
                        <table class="table table-striped table-bordered" id="approvedTable">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-user me-2"></i> Full Name</th>
                                    <th><i class="fas fa-phone me-2"></i> Contact</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Brgy Cert</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Solo Parent</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Birth Cert</th>
                                    <th><i class="fas fa-id-card me-2"></i> Valid ID</th>
                                    <th><i class="fas fa-image me-2"></i> 1x1 Pic</th>
                                    <th><i class="fas fa-calendar-alt me-2"></i> Date</th>
                                    <th><i class="fas fa-clock me-2"></i> Time</th>
                                    <th><i class="fas fa-info-circle me-2"></i> Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="approvedTableBody"></tbody>
                        </table>
                    </div>
                    <!-- Denied Tab -->
                    <div class="tab-pane fade" id="rejected" role="tabpanel" aria-labelledby="rejected-tab">
                        <table class="table table-striped table-bordered" id="rejectedTable">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-user me-2"></i> Full Name</th>
                                    <th><i class="fas fa-phone me-2"></i> Contact</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Brgy Cert</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Solo Parent</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Birth Cert</th>
                                    <th><i class="fas fa-id-card me-2"></i> Valid ID</th>
                                    <th><i class="fas fa-image me-2"></i> 1x1 Pic</th>
                                    <th><i class="fas fa-calendar-alt me-2"></i> Date</th>
                                    <th><i class="fas fa-clock me-2"></i> Time</th>
                                    <th><i class="fas fa-info-circle me-2"></i> Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="rejectedTableBody"></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script>
        // Register Chart.js Data Labels plugin
        Chart.register(ChartDataLabels);

        // Fallback data in case of fetch failure
        const fallbackCounts = { pending: 0, approved: 0, rejected: 0, total: 0 };
        const fallbackConsultations = [];

        // Pastel color palette for charts
        const pastelColorPalette = [
            '#a3bffa', '#f4a8a8', '#b5e4ca', '#f9d5a7', '#c3a6e4',
            '#f5a9cb', '#9ee4f5', '#d4e4a3', '#f9c4a7', '#b5d4f5'
        ];

        // Function to safely parse dates
        function parseConsultationDate(dateStr) {
            if (!dateStr || typeof dateStr !== 'string') {
                return new Date();
            }
            const dateParts = dateStr.split('-');
            if (dateParts.length !== 3) {
                return new Date();
            }
            const year = parseInt(dateParts[0], 10);
            const month = parseInt(dateParts[1], 10) - 1;
            const day = parseInt(dateParts[2], 10);
            if (isNaN(year) || isNaN(month) || isNaN(day) || year < 2000) {
                return new Date();
            }
            return new Date(year, month, day);
        }

        // Function to safely check file extensions
        function hasImageExtension(filePath) {
            if (!filePath || typeof filePath !== 'string') return false;
            const extension = filePath.toLowerCase().slice(-4);
            return ['.jpg', '.jpeg', '.png'].includes(extension);
        }

        // Function to initialize charts and tables with data
        function initializeCharts(counts, consultations) {
            // Hide loading message
            document.getElementById('loadingMessage').style.display = 'none';

            // Update stat cards
            document.getElementById('pendingCount').textContent = counts.pending || 0;
            document.getElementById('approvedCount').textContent = counts.approved || 0;
            document.getElementById('rejectedCount').textContent = counts.rejected || 0;
            document.getElementById('totalCount').textContent = counts.total || 0;

            // Calculate percentages for Doughnut Chart
            const total = counts.total || 1;
            const percentages = [
                ((counts.pending / total) * 100).toFixed(1),
                ((counts.approved / total) * 100).toFixed(1),
                ((counts.rejected / total) * 100).toFixed(1)
            ];

            // Responsive font sizes for charts
            const isMobile = window.innerWidth <= 768;
            const chartTitleFontSize = isMobile ? 12 : 14;
            const chartLabelFontSize = isMobile ? 8 : 10;

            // Initialize Doughnut Chart
            const statusCtx = document.getElementById('statusChart').getContext('2d');
            new Chart(statusCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Pending', 'Approved', 'Denied'],
                    datasets: [{
                        data: [counts.pending, counts.approved, counts.rejected],
                        backgroundColor: pastelColorPalette.slice(0, 3),
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    aspectRatio: 1.2,
                    plugins: {
                        legend: {
                            position: 'left',
                            labels: {
                                font: { size: chartLabelFontSize, family: 'Poppins' },
                                padding: 10,
                                generateLabels: (chart) => {
                                    const data = chart.data;
                                    return data.labels.map((label, i) => ({
                                        text: `${label} (${percentages[i]}%)`,
                                        fillStyle: data.datasets[0].backgroundColor[i],
                                        hidden: !chart.getDataVisibility(i),
                                        index: i
                                    }));
                                }
                            }
                        },
                        title: {
                            display: true,
                            text: 'Status Distribution',
                            font: { size: chartTitleFontSize, family: 'Poppins', weight: '700' },
                            padding: { bottom: 15 }
                        },
                        datalabels: {
                            color: '#ffffff',
                            font: { size: chartLabelFontSize, family: 'Poppins', weight: '600' },
                            formatter: (value, context) => {
                                const percentage = percentages[context.dataIndex];
                                return percentage >= 5 ? `${percentage}%` : '';
                            },
                            anchor: 'center',
                            align: 'center'
                        }
                    }
                }
            });

            // Initialize Line Chart
            const trendCtx = document.getElementById('trendChart').getContext('2d');
            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            const pendingData = new Array(12).fill(0);
            const approvedData = new Array(12).fill(0);
            const rejectedData = new Array(12).fill(0);

            consultations.forEach(consult => {
                const date = parseConsultationDate(consult.consultationDate);
                const monthIndex = date.getMonth();
                const status = consult.consultationStatus || 'Pending';
                if (status === 'Pending') pendingData[monthIndex]++;
                else if (status === 'Approved') approvedData[monthIndex]++;
                else if (status === 'Denied') rejectedData[monthIndex]++;
            });

            new Chart(trendCtx, {
                type: 'line',
                data: {
                    labels: months,
                    datasets: [
                        {
                            label: 'Pending',
                            data: pendingData,
                            borderColor: pastelColorPalette[0],
                            backgroundColor: pastelColorPalette[0] + '33',
                            fill: true,
                            tension: 0.4
                        },
                        {
                            label: 'Approved',
                            data: approvedData,
                            borderColor: pastelColorPalette[1],
                            backgroundColor: pastelColorPalette[1] + '33',
                            fill: true,
                            tension: 0.4
                        },
                        {
                            label: 'Denied',
                            data: rejectedData,
                            borderColor: pastelColorPalette[2],
                            backgroundColor: pastelColorPalette[2] + '33',
                            fill: true,
                            tension: 0.4
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    aspectRatio: 1.5,
                    plugins: {
                        legend: {
                            position: 'top',
                            labels: { font: { size: chartLabelFontSize, family: 'Poppins' } }
                        },
                        title: {
                            display: true,
                            text: 'Consultation Trends (2025)',
                            font: { size: chartTitleFontSize, family: 'Poppins', weight: '700' }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: { display: true, text: 'Consultations', font: { size: chartLabelFontSize } },
                            ticks: { font: { size: chartLabelFontSize } }
                        },
                        x: {
                            title: { display: true, text: 'Month', font: { size: chartLabelFontSize } },
                            ticks: { font: { size: chartLabelFontSize }, maxTicksLimit: isMobile ? 6 : 12 }
                        }
                    }
                }
            });

            // Populate Tables
            const pendingTableBody = document.getElementById('pendingTableBody');
            const approvedTableBody = document.getElementById('approvedTableBody');
            const rejectedTableBody = document.getElementById('rejectedTableBody');

            consultations.forEach(item => {
                const row = `
                    <tr>
                        <td>${item.firstName2 || ''} ${item.middleName2 || ''} ${item.lastName2 || ''}</td>
                        <td>${item.contactNumber2 || 'N/A'}</td>
                        <td>
                            ${
                                item.brgyCertPath2 && hasImageExtension(item.brgyCertPath2)
                                    ? `<img src="${item.brgyCertPath2}" alt="Barangay Cert" width="60" />`
                                    : item.brgyCertPath2
                                        ? '<span>Non-image file</span>'
                                        : '<span>No file</span>'
                            }
                        </td>
                        <td>
                            ${
                                item.proofSoloParentPath2 && hasImageExtension(item.proofSoloParentPath2)
                                    ? `<img src="${item.proofSoloParentPath2}" alt="Proof Solo Parent" width="60" />`
                                    : item.proofSoloParentPath2
                                        ? '<span>Non-image file</span>'
                                        : '<span>No file</span>'
                            }
                        </td>
                        <td>
                            ${
                                item.birthCertPath2 && hasImageExtension(item.birthCertPath2)
                                    ? `<img src="${item.birthCertPath2}" alt="Birth Cert" width="60" />`
                                    : item.birthCertPath2
                                        ? '<span>Non-image file</span>'
                                        : '<span>No file</span>'
                            }
                        </td>
                        <td>
                            ${
                                item.validIdPath2 && hasImageExtension(item.validIdPath2)
                                    ? `<img src="${item.validIdPath2}" alt="Valid ID" width="60" />`
                                    : item.validIdPath2
                                        ? '<span>Non-image file</span>'
                                        : '<span>No file</span>'
                            }
                        </td>
                        <td>
                            ${
                                item.x1PicPath2 && hasImageExtension(item.x1PicPath2)
                                    ? `<img src="${item.x1PicPath2}" alt="1x1 Pic" width="60" />`
                                    : item.x1PicPath2
                                        ? '<span>Non-image file</span>'
                                        : '<span>No file</span>'
                            }
                        </td>
                        <td>${item.consultationDate || 'N/A'}</td>
                        <td>${item.consultationTime || 'N/A'}</td>
                        <td>${item.consultationStatus || 'Pending'}</td>
                        <td>
                            <a href="/Consultations/Details/${item.id}" class="btn btn-primary btn-sm"><i class="fas fa-eye me-1"></i> Details</a>
                            <a href="/Consultations/Edit/${item.id}" class="btn btn-warning btn-sm"><i class="fas fa-edit me-1"></i> Edit</a>
                            <a href="/Consultations/Delete/${item.id}" class="btn btn-danger btn-sm"><i class="fas fa-trash me-1"></i> Delete</a>
                        </td>
                    </tr>
                `;
                const status = item.consultationStatus || 'Pending';
                if (status === 'Pending') {
                    pendingTableBody.innerHTML += row;
                } else if (status === 'Approved') {
                    approvedTableBody.innerHTML += row;
                } else if (status === 'Denied') {
                    rejectedTableBody.innerHTML += row;
                }
            });
        }

        // Fetch data with enhanced error handling
        Promise.all([
            fetch('/Consultations/GetDashboardCounts', {
                method: 'GET',
                headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' },
                credentials: 'same-origin'
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => {
                            throw new Error(`${err.error || 'Failed to fetch counts'}: ${err.details || response.statusText}`);
                        });
                    }
                    return response.json();
                })
                .catch(error => {
                    console.error('Error fetching counts:', error.message);
                    return fallbackCounts;
                }),
            fetch('/Consultations/GetAllConsultations', {
                method: 'GET',
                headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' },
                credentials: 'same-origin'
            })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => {
                            throw new Error(`${err.error || 'Failed to fetch consultations'}: ${err.details || response.statusText}`);
                        });
                    }
                    return response.json();
                })
                .catch(error => {
                    console.error('Error fetching consultations:', error.message);
                    return fallbackConsultations;
                })
        ])
            .then(([counts, consultations]) => {
                if (counts === fallbackCounts && consultations === fallbackConsultations) {
                    const errorDiv = document.getElementById('errorMessage');
                    errorDiv.textContent = 'Failed to load data from server. Displaying fallback data.';
                    errorDiv.style.display = 'block';
                }
                initializeCharts(counts, consultations);
            })
            .catch(error => {
                console.error('Unexpected error:', error.message);
                const errorDiv = document.getElementById('errorMessage');
                errorDiv.textContent = `Error: ${error.message}`;
                errorDiv.style.display = 'block';
                initializeCharts(fallbackCounts, fallbackConsultations);
            });

        // Ensure loading message is visible initially
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('loadingMessage').style.display = 'block';
        });
    </script>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
</body>
</html>