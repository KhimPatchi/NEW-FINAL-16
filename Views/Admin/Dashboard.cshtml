@model SocialWelfarre.Models.ApplicationFoodPack
@{
    ViewData["Title"] = "Dashboard";
    Layout = "/Views/Shared/_DashboardLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - Food Pack Applications</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <!-- Font Awesome for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <!-- Chart.js Data Labels Plugin -->
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0/dist/chartjs-plugin-datalabels.min.js"></script>
    <style>
        body {
            background-color: #f0f4f8;
            font-family: 'Poppins', sans-serif;
            color: #1f2937;
        }

        .dashboard-container {
            padding: 40px 20px;
            width: 100%;
            box-sizing: border-box;
        }

        .card {
            border: none;
            border-radius: 25px;
            box-shadow: 0 10px 35px rgba(0, 0, 0, 0.1);
            background: linear-gradient(135deg, #ffffff, #e6f0fa);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            width: 100%;
        }

            .card:hover {
                transform: translateY(-8px);
                box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
            }

        .card-header {
            background: linear-gradient(90deg, #1e40af, #14b8a6);
            color: #ffffff;
            border-bottom: none;
            font-size: 2rem;
            font-weight: 700;
            padding: 25px;
            border-radius: 25px 25px 0 0;
        }

        .card-body {
            padding: 40px;
            width: 100%;
        }

        .stat-card {
            padding: 25px;
            border-radius: 20px;
            margin-bottom: 25px;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
            transition: transform 0.3s ease;
        }

            .stat-card:hover {
                transform: translateY(-5px);
            }

            .stat-card:nth-child(1) {
                background: linear-gradient(135deg, #1e40af, #60a5fa);
            }

            .stat-card:nth-child(2) {
                background: linear-gradient(135deg, #14b8a6, #6ee7b7);
            }

            .stat-card:nth-child(3) {
                background: linear-gradient(135deg, #7c3aed, #a78bfa);
            }

            .stat-card:nth-child(4) {
                background: linear-gradient(135deg, #f97316, #fb923c);
            }

            .stat-card i {
                font-size: 3rem;
                color: #ffffff;
                background: rgba(0, 0, 0, 0.2);
                padding: 20px;
                border-radius: 50%;
                width: 70px;
                height: 70px;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: transform 0.3s ease;
            }

            .stat-card:hover i {
                transform: scale(1.1);
            }

            .stat-card .stat-info h3 {
                font-size: 2.5rem;
                font-weight: 700;
                margin: 0;
                color: #ffffff;
            }

            .stat-card .stat-info p {
                font-size: 1.3rem;
                color: rgba(255, 255, 255, 0.8);
                margin: 0;
            }

        .chart-container, .line-chart-container {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 20px; /* Reduced from 35px */
            box-shadow: 0 6px 25px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-height: 400px; /* Set maximum height to shorten the card */
            overflow: auto; /* Allow scrolling if content exceeds height */
        }

        canvas#statusChart, canvas#trendChart {
            max-height: 350px; /* Enforce a shorter canvas height */
            width: 100% !important;
        }

        .btn-primary {
            background-color: #1e40af;
            border: none;
            border-radius: 12px;
            padding: 12px 25px;
            font-size: 1.3rem;
            font-weight: 600;
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

            .btn-primary:hover {
                background-color: #1e3a8a;
                transform: translateY(-3px);
            }

        .btn-success {
            background-color: #14b8a6;
            border-radius: 12px;
            padding: 12px 25px;
            font-size: 1.3rem;
            font-weight: 600;
        }

            .btn-success:hover {
                background-color: #0d9488;
                transform: translateY(-3px);
            }

        .btn-info {
            background-color: #7c3aed;
            border-radius: 12px;
            padding: 12px 25px;
            font-size: 1.3rem;
            font-weight: 600;
        }

            .btn-info:hover {
                background-color: #6d28d9;
                transform: translateY(-3px);
            }

        .quick-links {
            margin-top: 60px;
        }

            .quick-links h4 {
                font-size: 2rem;
                font-weight: 700;
                color: #1f2937;
                margin-bottom: 25px;
            }

        .table-container {
            margin-top: 60px;
            background: linear-gradient(135deg, #1f2937, #374151);
            border-radius: 20px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            padding: 35px;
            width: 100%;
        }

            .table-container h4 {
                font-size: 2rem;
                font-weight: 700;
                color: #ffffff;
                margin-bottom: 25px;
            }

        .table {
            margin-bottom: 0;
            font-size: 1.3rem;
            background: #ffffff;
            border-radius: 15px;
            overflow: hidden;
            width: 100%;
        }

            .table th {
                font-weight: 700;
                color: #ffffff;
                background: #1e40af;
                padding: 20px;
                font-size: 1.5rem;
            }

            .table td {
                vertical-align: middle;
                padding: 20px;
                font-size: 1.3rem;
                background: #ffffff;
            }

            .table tr:nth-child(even) td {
                background: #f9fafb;
            }

            .table tr:hover td {
                background: #e6f0fa;
                transform: scale(1.01);
                transition: background 0.3s ease, transform 0.3s ease;
            }

            .table img {
                border-radius: 12px;
                width: 100px;
            }

            .table .btn-sm {
                font-size: 1.2rem;
                padding: 8px 12px;
            }

        .nav-tabs {
            border-bottom: 5px solid #e5e7eb;
        }

            .nav-tabs .nav-link {
                color: #6b7280;
                font-weight: 700;
                padding: 15px 30px;
                border: none;
                border-bottom: 5px solid transparent;
                font-size: 1.5rem;
                transition: color 0.3s ease, border-color 0.3s ease;
            }

                .nav-tabs .nav-link:hover,
                .nav-tabs .nav-link.active {
                    color: #1e40af;
                    border-bottom: 5px solid #1e40af;
                    background: linear-gradient(90deg, #1e40af, #14b8a6);
                    -webkit-background-clip: text;
                    -webkit-text-fill-color: transparent;
                }

        .error-message {
            color: #ffffff;
            font-size: 1.4rem;
            margin-top: 25px;
            padding: 20px;
            background: linear-gradient(135deg, #ef4444, #f87171);
            border-radius: 15px;
            display: none;
        }

            .error-message::before {
                content: '\f071';
                font-family: 'Font Awesome 6 Free';
                font-weight: 900;
                margin-right: 10px;
            }

        .loading-message {
            color: #ffffff;
            font-size: 1.4rem;
            margin-top: 25px;
            padding: 20px;
            background: linear-gradient(135deg, #14b8a6, #06b6d4);
            border-radius: 15px;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .loading-message::before {
                content: '\f110';
                font-family: 'Font Awesome 6 Free';
                font-weight: 900;
                margin-right: 10px;
                animation: spin 1s linear infinite;
            }


        {
            transform: rotate(360deg);
        }

        }



        {
            max-height: 300px; /* Reduced height for smaller screens */
        }

        canvas#statusChart, canvas#trendChart {
            max-height: 250px;
        }

        .dashboard-container {
            padding: 20px 10px;
        }

        .card-header {
            font-size: 1.6rem;
            padding: 15px;
        }

        .stat-card {
            padding: 20px;
        }

            .stat-card i {
                width: 50px;
                height: 50px;
                font-size: 2rem;
            }

            .stat-card .stat-info h3 {
                font-size: 2rem;
            }

            .stat-card .stat-info p {
                font-size: 1.1rem;
            }

        .chart-container, .line-chart-container {
            padding: 15px; /* Further reduced padding for smaller screens */
        }

        .table th, .table td {
            font-size: 1.1rem;
            padding: 12px;
        }

        .table img {
            width: 60px;
        }

        .btn-primary, .btn-success, .btn-info {
            font-size: 1.1rem;
            padding: 10px 15px;
        }

        }</style>
</head>
<body>

    <!-- Main Content Card -->
    <div class="card col-12">
        <div class="card-body">
            <!-- Loading Message -->
            <div id="loadingMessage" class="loading-message">Loading data...</div>
            <!-- Statistics Cards -->
            <div class="row g-4">
                <div class="col-md-3 col-sm-6">
                    <div class="stat-card">
                        <i class="fas fa-hourglass-half"></i>
                        <div class="stat-info">
                            <h3 id="pendingCount">0</h3>
                            <p>Pending Applications</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="stat-card">
                        <i class="fas fa-check-circle"></i>
                        <div class="stat-info">
                            <h3 id="approvedCount">0</h3>
                            <p>Approved Applications</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="stat-card">
                        <i class="fas fa-times-circle"></i>
                        <div class="stat-info">
                            <h3 id="rejectedCount">0</h3>
                            <p>Rejected Applications</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-6">
                    <div class="stat-card">
                        <i class="fas fa-boxes"></i>
                        <div class="stat-info">
                            <h3 id="totalCount">0</h3>
                            <p>Total Applications</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Error Message -->
            <div id="errorMessage" class="error-message">Unable to load data. Please try again later.</div>

            <!-- Charts Section -->
            <div class="row g-4 mt-4">
                <div class="col-md-6 col-12">
                    <div class="chart-container">
                        <h4 class="mb-4" style="font-size: 1.8rem;">Application Distribution by Reason</h4>
                        <canvas id="statusChart"></canvas>
                    </div>
                </div>
                <div class="col-md-6 col-12">
                    <div class="line-chart-container">
                        <h4 class="mb-4" style="font-size: 1.8rem;">Application Trends by Barangay</h4>
                        <canvas id="trendChart"></canvas>
                    </div>
                </div>
            </div>

       

            <!-- Applications Table -->
            <div class="table-container">
                <h4 class="mb-4">Food Pack Applications</h4>
                <ul class="nav nav-tabs" id="applicationTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a class="nav-link active" id="pending-tab" data-bs-toggle="tab" href="#pending" role="tab" aria-controls="pending" aria-selected="true">Pending</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="approved-tab" data-bs-toggle="tab" href="#approved" role="tab" aria-controls="approved" aria-selected="false">Approved</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link" id="rejected-tab" data-bs-toggle="tab" href="#rejected" role="tab" aria-controls="rejected" aria-selected="false">Rejected</a>
                    </li>
                </ul>
                <div class="tab-content" id="applicationTabContent">
                    <!-- Pending Tab -->
                    <div class="tab-pane fade show active" id="pending" role="tabpanel" aria-labelledby="pending-tab">
                        <table class="table table-striped table-bordered" id="pendingTable">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-user me-2"></i> Full Name</th>
                                    <th><i class="fas fa-boxes me-2"></i> Packs</th>
                                    <th><i class="fas fa-map-marker-alt me-2"></i> Barangay</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Brgy Cert</th>
                                    <th><i class="fas fa-id-card me-2"></i> Valid ID</th>
                                    <th><i class="fas fa-comment me-2"></i> Reason</th>
                                    <th><i class="fas fa-info-circle me-2"></i> Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="pendingTableBody"></tbody>
                        </table>
                    </div>
                    <!-- Approved Tab -->
                    <div class="tab-pane fade" id="approved" role="tabpanel" aria-labelledby="approved-tab">
                        <table class="table table-striped table-bordered" id="approvedTable">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-user me-2"></i> Full Name</th>
                                    <th><i class="fas fa-boxes me-2"></i> Packs</th>
                                    <th><i class="fas fa-map-marker-alt me-2"></i> Barangay</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Brgy Cert</th>
                                    <th><i class="fas fa-id-card me-2"></i> Valid ID</th>
                                    <th><i class="fas fa-comment me-2"></i> Reason</th>
                                    <th><i class="fas fa-info-circle me-2"></i> Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="approvedTableBody"></tbody>
                        </table>
                    </div>
                    <!-- Rejected Tab -->
                    <div class="tab-pane fade" id="rejected" role="tabpanel" aria-labelledby="rejected-tab">
                        <table class="table table-striped table-bordered" id="rejectedTable">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-user me-2"></i> Full Name</th>
                                    <th><i class="fas fa-boxes me-2"></i> Packs</th>
                                    <th><i class="fas fa-map-marker-alt me-2"></i> Barangay</th>
                                    <th><i class="fas fa-file-alt me-2"></i> Brgy Cert</th>
                                    <th><i class="fas fa-id-card me-2"></i> Valid ID</th>
                                    <th><i class="fas fa-comment me-2"></i> Reason</th>
                                    <th><i class="fas fa-info-circle me-2"></i> Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="rejectedTableBody"></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script>
        // Register Chart.js Data Labels plugin
        Chart.register(ChartDataLabels);

        // Fallback data in case of fetch failure
        const fallbackCounts = { pending: 0, approved: 0, rejected: 0, total: 0 };
        const fallbackApplications = [];

        // Pastel color palette for charts
        const pastelColorPalette = [
            '#a3bffa', '#f4a8a8', '#b5e4ca', '#f9d5a7', '#c3a6e4',
            '#f5a9cb', '#9ee4f5', '#d4e4a3', '#f9c4a7', '#b5d4f5'
        ];

        // Function to initialize charts and tables with data
        function initializeCharts(counts, applications) {
            // Hide loading message
            document.getElementById('loadingMessage').style.display = 'none';

            // Update stat cards
            document.getElementById('pendingCount').textContent = counts.pending || 0;
            document.getElementById('approvedCount').textContent = counts.approved || 0;
            document.getElementById('rejectedCount').textContent = counts.rejected || 0;
            document.getElementById('totalCount').textContent = counts.total || 0;

            // Group applications by Reason for Doughnut Chart
            const reasonCounts = {};
            applications.forEach(app => {
                const reason = app.Reason || 'N/A';
                reasonCounts[reason] = (reasonCounts[reason] || 0) + 1;
            });

            const reasons = Object.keys(reasonCounts);
            const reasonData = Object.values(reasonCounts);
            const total = reasonData.reduce((sum, count) => sum + count, 0) || 1; // Avoid division by zero
            const percentages = reasonData.map(count => ((count / total) * 100).toFixed(1));

            // Only render Doughnut Chart if there is data to display
            if (reasons.length > 0 && total > 0) {
                const statusCtx = document.getElementById('statusChart').getContext('2d');
                new Chart(statusCtx, {
                    type: 'doughnut',
                    data: {
                        labels: reasons,
                        datasets: [{
                            data: reasonData,
                            backgroundColor: reasons.map((_, index) => pastelColorPalette[index % pastelColorPalette.length]),
                            borderWidth: 0
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        aspectRatio: 1.5, // Adjust aspect ratio for a more compact doughnut
                        plugins: {
                            legend: {
                                position: 'left',
                                labels: {
                                    font: { size: 16, family: 'Poppins' },
                                    padding: 20,
                                    generateLabels: (chart) => {
                                        const data = chart.data;
                                        return data.labels.map((label, i) => ({
                                            text: `${label} (${percentages[i]}%)`,
                                            fillStyle: data.datasets[0].backgroundColor[i],
                                            hidden: !chart.getDataVisibility(i),
                                            index: i
                                        }));
                                    }
                                }
                            },
                            title: {
                                display: true,
                                text: 'Application Distribution by Reason',
                                font: { size: 22, family: 'Poppins', weight: '700' },
                                padding: { bottom: 30 }
                            },
                            datalabels: {
                                color: '#ffffff',
                                font: { size: 14, family: 'Poppins', weight: '600' },
                                formatter: (value, context) => {
                                    const percentage = percentages[context.dataIndex];
                                    return percentage >= 5 ? `${percentage}%` : '';
                                },
                                anchor: 'center',
                                align: 'center'
                            }
                        }
                    }
                });
            } else {
                document.getElementById('statusChart').parentElement.innerHTML += '<p class="text-muted text-center mt-3">No data available for Reason distribution.</p>';
            }

            // Line Chart for Trends by Barangay
            const trendCtx = document.getElementById('trendChart').getContext('2d');
            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            const barangayTrends = {};

            // Initialize data for each Barangay
            applications.forEach(app => {
                const barangay = app.Barangay || 'N/A';
                if (!barangayTrends[barangay]) barangayTrends[barangay] = new Array(12).fill(0);
            });

            // Populate trends data
            applications.forEach(app => {
                const barangay = app.Barangay || 'N/A';
                const date = new Date(app.RequestDate && new Date(app.RequestDate).getFullYear() > 2000 ? app.RequestDate : Date.now());
                const month = date.getMonth();
                barangayTrends[barangay][month]++;
            });

            const datasets = Object.keys(barangayTrends).map((barangay, index) => ({
                label: barangay,
                data: barangayTrends[barangay],
                borderColor: pastelColorPalette[index % pastelColorPalette.length],
                backgroundColor: pastelColorPalette[index % pastelColorPalette.length] + '33',
                fill: true,
                tension: 0.4
            }));

            if (datasets.length > 0) {
                new Chart(trendCtx, {
                    type: 'line',
                    data: {
                        labels: months,
                        datasets: datasets
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        aspectRatio: 2, // Adjust aspect ratio for a more compact line chart
                        plugins: {
                            legend: {
                                position: 'top',
                                labels: { font: { size: 16, family: 'Poppins' } }
                            },
                            title: {
                                display: true,
                                text: 'Application Trends by Barangay',
                                font: { size: 22, family: 'Poppins', weight: '700' }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: { display: true, text: 'Number of Applications', font: { size: 16 } },
                                ticks: { font: { size: 14 } }
                            },
                            x: {
                                title: { display: true, text: 'Month', font: { size: 16 } },
                                ticks: { font: { size: 14 } }
                            }
                        }
                    }
                });
            } else {
                document.getElementById('trendChart').parentElement.innerHTML += '<p class="text-muted text-center mt-3">No data available for Barangay trends.</p>';
            }

            // Populate Tables
            const pendingTableBody = document.getElementById('pendingTableBody');
            const approvedTableBody = document.getElementById('approvedTableBody');
            const rejectedTableBody = document.getElementById('rejectedTableBody');

            applications.forEach(item => {
                const fileExtensions = ['.jpg', '.jpeg', '.png'];
                const isImageCert = item.Brgy_Cert_Path && fileExtensions.some(ext => item.Brgy_Cert_Path.toLowerCase().endsWith(ext));
                const isImageId = item.Valid_ID_Path && fileExtensions.some(ext => item.Valid_ID_Path.toLowerCase().endsWith(ext));

                const row = `
                    <tr>
                        <td>${item.FirstName} ${item.MiddleName || ''} ${item.LastName}</td>
                        <td>${item.Packs}</td>
                        <td>${item.Barangay}</td>
                        <td>
                            ${
                                item.Brgy_Cert_Path
                                    ? isImageCert
                                        ? `<img src="${item.Brgy_Cert_Path}" alt="Barangay Cert" width="80" />`
                                        : '<span>Non-image file</span>'
                                    : '<span>No file</span>'
                            }
                        </td>
                        <td>
                            ${
                                item.Valid_ID_Path
                                    ? isImageId
                                        ? `<img src="${item.Valid_ID_Path}" alt="Valid ID" width="80" />`
                                        : '<span>Non-image file</span>'
                                    : '<span>No file</span>'
                            }
                        </td>
                        <td>${item.Reason}</td>
                        <td>${item.Status}</td>
                        <td>
                            <a href="/ApplicationFoodPacks/Details/${item.Id}" class="btn btn-primary btn-sm"><i class="fas fa-eye me-2"></i> Details</a>
                            <a href="/ApplicationFoodPacks/Edit/${item.Id}" class="btn btn-warning btn-sm"><i class="fas fa-edit me-2"></i> Edit</a>
                            <a href="/ApplicationFoodPacks/Delete/${item.Id}" class="btn btn-danger btn-sm"><i class="fas fa-trash me-2"></i> Delete</a>
                        </td>
                    </tr>
                `;
                if (item.Status === 'Pending') {
                    pendingTableBody.innerHTML += row;
                } else if (item.Status === 'Approved') {
                    approvedTableBody.innerHTML += row;
                } else if (item.Status === 'Denied') {
                    rejectedTableBody.innerHTML += row;
                }
            });
        }

        // Fetch data with error handling
        Promise.all([
            fetch('/ApplicationFoodPacks/GetDashboardCounts', { headers: { 'Accept': 'application/json' } })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => {
                            throw new Error(`${err.error || 'Failed to fetch counts'}: ${err.details || response.statusText}`);
                        });
                    }
                    return response.json();
                })
                .catch(error => {
                    console.error('Error fetching counts:', error.message);
                    return fallbackCounts;
                }),
            fetch('/ApplicationFoodPacks/GetAllApplications', { headers: { 'Accept': 'application/json' } })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => {
                            throw new Error(`${err.error || 'Failed to fetch applications'}: ${err.details || response.statusText}`);
                        });
                    }
                    return response.json();
                })
                .catch(error => {
                    console.error('Error fetching applications:', error.message);
                    return fallbackApplications;
                })
        ])
            .then(([counts, applications]) => {
                if (counts === fallbackCounts && applications === fallbackApplications) {
                    const errorDiv = document.getElementById('errorMessage');
                    errorDiv.textContent = 'Failed to load data from server. Displaying fallback data.';
                    errorDiv.style.display = 'block';
                }
                initializeCharts(counts, applications);
            })
            .catch(error => {
                console.error('Unexpected error:', error.message);
                const errorDiv = document.getElementById('errorMessage');
                errorDiv.textContent = `Error: ${error.message}`;
                errorDiv.style.display = 'block';
                initializeCharts(fallbackCounts, fallbackApplications);
            });
    </script>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
</body>
</html>