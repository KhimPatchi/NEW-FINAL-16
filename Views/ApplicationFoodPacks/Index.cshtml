@model IEnumerable<SocialWelfarre.Models.ApplicationFoodPack>
@using System.IO

@{
    ViewData["Title"] = "Food Pack Applications";
    Layout = "/Views/Shared/_DashboardLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Food Pack Applications</title>
    <!-- CSS dependencies (assumed to be in layout, included here for completeness) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <!-- Add Application Form Section -->
    <div class="card">
        <div class="card-body">
            <div class="form-section">
                <h4><i class="fas fa-plus-circle"></i> Add New Application</h4>
                <!-- Success Alert -->
                <div id="successAlert" class="alert alert-success d-none" role="alert">
                    Consultation submitted successfully!
                </div>

                <form asp-action="Create" method="post" enctype="multipart/form-data" id="Create" onsubmit="return handleSubmit(event)">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-row">
                        <div class="form-group col-md-2">
                            <label asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().FirstName)" class="form-label"><i class="fas fa-user"></i> First Name</label>
                            <input asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().FirstName)" class="form-control" placeholder="Enter First Name" required />
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().FirstName)" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-2">
                            <label asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().MiddleName)" class="form-label"><i class="fas fa-user"></i> Middle Name</label>
                            <input asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().MiddleName)" class="form-control" placeholder="Enter Middle Name" />
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().MiddleName)" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-2">
                            <label asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().LastName)" class="form-label"><i class="fas fa-user"></i> Last Name</label>
                            <input asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().LastName)" class="form-control" placeholder="Enter Last Name" required />
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().LastName)" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-2">
                            <label asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().ContactNumber)" class="form-label"><i class="fas fa-phone"></i> Contact Number</label>
                            <input asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().ContactNumber)" class="form-control" placeholder="Enter Contact Number" required />
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().ContactNumber)" class="text-danger"></span>
                        </div>
                        <div class="form-group col-sm-1">
                            <label asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Age)" class="form-label"><i class="fas fa-birthday-cake"></i> Age</label>
                            <input asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Age)" class="form-control" type="number" placeholder="Enter Age" required />
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Age)" class="text-danger"></span>
                        </div>
                        <div class="form-group col-sm-1">
                            <label asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Packs)" class="form-label"><i class="fas fa-boxes"></i> Number of Packs</label>
                            <input asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Packs)" class="form-control" type="number" placeholder="Enter Number of Packs" required />
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Packs)" class="text-danger"></span>
                        </div>
                        <div class="form-group col-sm-1">
                            <label asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Address)" class="form-label"><i class="fas fa-home"></i> Address</label>
                            <input asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Address)" class="form-control" placeholder="Enter Address" required />
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Address)" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-2">
                            <label asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Barangay)" class="form-label"><i class="fas fa-map-marker-alt"></i> Barangay</label>
                            <select asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Barangay)" class="form-select">
                                <option value="">-- Select Barangay --</option>
                                @foreach (var barangay in Html.GetEnumSelectList<Barangay>())
                                {
                                    <option value="@barangay.Value">@barangay.Text</option>
                                }
                            </select>
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Barangay)" class="text-danger"></span>
                        </div>
                        <div class="form-group col-sm-1">
                            <label asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Reason)" class="form-label"><i class="fas fa-comment"></i> Reason</label>
                            <select asp-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Reason)" class="form-select">
                                <option value="">-- Select Reason --</option>
                                @foreach (var reason in Html.GetEnumSelectList<Reason>())
                                {
                                    <option value="@reason.Value">@reason.Text</option>
                                }
                            </select>
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Reason)" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label for="brgyCertFile"><i class="fas fa-file-alt"></i> Barangay Certificate</label>
                            <div class="custom-file-upload">
                                <input type="file" name="brgyCertFile" id="brgyCertFile" accept=".jpg,.jpeg,.png,.pdf" required />
                                <label for="brgyCertFile" class="custom-file-label"><i class="fas fa-upload"></i> Choose File</label>
                            </div>
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Brgy_Cert)" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label for="validIdFile"><i class="fas fa-id-card"></i> Valid ID</label>
                            <div class="custom-file-upload">
                                <input type="file" name="validIdFile" id="validIdFile" accept=".jpg,.jpeg,.png,.pdf" required />
                                <label for="validIdFile" class="custom-file-label"><i class="fas fa-upload"></i> Choose File</label>
                            </div>
                            <span asp-validation-for="@(new SocialWelfarre.Models.ApplicationFoodPack().Valid_ID)" class="text-danger"></span>
                        </div>
                    </div>


                    <button type="submit" class="btn btn-primary mt-1"><i class="fas fa-save"></i> Add Application</button>
                </form>
            </div>
        </div>
    </div>

    <!-- Define status variables -->
    @{
        var pendingStatus = ActiveStatus.Pending.ToString();
        var acceptedStatus = ActiveStatus.Approved.ToString();
        var rejectedStatus = ActiveStatus.Denied.ToString();
        var processStatus = ActiveStatus.Process.ToString();
    }

    <!-- Tabs Section -->
    <div class="card">
        <div class="card-body">
            <!-- Tabs for Pending, Process, Accepted, Rejected -->
            <ul class="nav nav-tabs" id="pictureTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending" type="button" role="tab" aria-controls="pending" aria-selected="true">Pending</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="process-tab" data-bs-toggle="tab" data-bs-target="#process" type="button" role="tab" aria-controls="process" aria-selected="false">Process</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="accepted-tab" data-bs-toggle="tab" data-bs-target="#accepted" type="button" role="tab" aria-controls="accepted" aria-selected="false">Accepted</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="rejected-tab" data-bs-toggle="tab" data-bs-target="#rejected" type="button" role="tab" aria-controls="rejected" aria-selected="false">Rejected</button>
                </li>
            </ul>

            <div class="tab-content" id="pictureTabContent">
                <!-- Pending Tab -->
                <div class="tab-pane fade show active" id="pending" role="tabpanel" aria-labelledby="pending-tab">
                    <h3 class="mt-3 mb-3">Pending Applications</h3>
                    <table id="pendingTable" class="table table-striped" style="width:100%">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Packs</th>
                                <th>Barangay</th>
                                <th>Barangay Certificate</th>
                                <th>Valid ID</th>
                                <th>Reason</th>
                                <th>Status</th>
                                <th>Request Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Where(x => (x.Status == null) || Enum.GetName(typeof(ActiveStatus), x.Status) == pendingStatus))
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Packs)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Barangay)</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.Brgy_Cert_Path))
                                        {
                                            var extension = System.IO.Path.GetExtension(item.Brgy_Cert_Path)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(item.Brgy_Cert_Path)" alt="@item.Brgy_Cert" width="100" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>No file</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.Valid_ID_Path))
                                        {
                                            var extension = System.IO.Path.GetExtension(item.Valid_ID_Path)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(item.Valid_ID_Path)" alt="@item.Valid_ID" width="100" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>No file</span>
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.Reason)</td>
                                    <td><span class="badge badge-warning">@Html.DisplayFor(modelItem => item.Status)</span></td>
                                    <td>@Html.DisplayFor(modelItem => item.RequestDate)</td>
                                    <td>
                                        @if (User.IsInRole("Staff1") || User.IsInRole("Admin"))
                                        {
                                            <div class="btn-group" role="group">
                                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm"><i class="fas fa-eye"></i></a>
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm"><i class="fas fa-edit"></i></a>
                                               
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Process Tab -->
                <div class="tab-pane fade" id="process" role="tabpanel" aria-labelledby="process-tab">
                    <h3 class="mt-3 mb-3">Process Applications</h3>
                    <table id="processTable" class="table table-striped" style="width:100%">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Packs</th>
                                <th>Barangay</th>
                                <th>Barangay Certificate</th>
                                <th>Valid ID</th>
                                <th>Reason</th>
                                <th>Status</th>
                                <th>Request Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Where(x => Enum.GetName(typeof(ActiveStatus), x.Status) == processStatus))
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Packs)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Barangay)</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.Brgy_Cert_Path))
                                        {
                                            var extension = System.IO.Path.GetExtension(item.Brgy_Cert_Path)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(item.Brgy_Cert_Path)" alt="@item.Brgy_Cert" width="100" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>No file</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.Valid_ID_Path))
                                        {
                                            var extension = System.IO.Path.GetExtension(item.Valid_ID_Path)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(item.Valid_ID_Path)" alt="@item.Valid_ID" width="100" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>No file</span>
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.Reason)</td>
                                    <td><span class="badge custom-orange">@Html.DisplayFor(modelItem => item.Status)</span></td>
                                    <td>@Html.DisplayFor(modelItem => item.RequestDate)</td>
                                    <td>
                                        @if (User.IsInRole("Staff2") || User.IsInRole("Admin"))
                                        {
                                            <div class="btn-group" role="group">
                                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm"><i class="fas fa-eye"></i></a>
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm"><i class="fas fa-edit"></i></a>
                                               
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Accepted Tab -->
                <div class="tab-pane fade" id="accepted" role="tabpanel" aria-labelledby="accepted-tab">
                    <h3 class="mt-3 mb-3">Accepted Applications</h3>
                    <table id="acceptedTable" class="table table-striped" style="width:100%">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Packs</th>
                                <th>Barangay</th>
                                <th>Barangay Certificate</th>
                                <th>Valid ID</th>
                                <th>Reason</th>
                                <th>Status</th>
                                <th>Request Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Where(x => Enum.GetName(typeof(ActiveStatus), x.Status) == acceptedStatus))
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Packs)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Barangay)</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.Brgy_Cert_Path))
                                        {
                                            var extension = System.IO.Path.GetExtension(item.Brgy_Cert_Path)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(item.Brgy_Cert_Path)" alt="@item.Brgy_Cert" width="100" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>No file</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.Valid_ID_Path))
                                        {
                                            var extension = System.IO.Path.GetExtension(item.Valid_ID_Path)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(item.Valid_ID_Path)" alt="@item.Valid_ID" width="100" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>No file</span>
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.Reason)</td>
                                    <td><span class="badge badge-success">@Html.DisplayFor(modelItem => item.Status)</span></td>
                                    <td>@Html.DisplayFor(modelItem => item.RequestDate)</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm"><i class="fas fa-eye"></i></a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Rejected Tab -->
                <div class="tab-pane fade" id="rejected" role="tabpanel" aria-labelledby="rejected-tab">
                    <h3 class="mt-3 mb-3">Rejected Applications</h3>
                    <table id="rejectedTable" class="table table-striped" style="width:100%">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Packs</th>
                                <th>Barangay</th>
                                <th>Barangay Certificate</th>
                                <th>Valid ID</th>
                                <th>Reason</th>
                                <th>Status</th>
                                <th>Request Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Where(x => Enum.GetName(typeof(ActiveStatus), x.Status) == rejectedStatus))
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Packs)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Barangay)</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.Brgy_Cert_Path))
                                        {
                                            var extension = System.IO.Path.GetExtension(item.Brgy_Cert_Path)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(item.Brgy_Cert_Path)" alt="@item.Brgy_Cert" width="100" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>No file</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.Valid_ID_Path))
                                        {
                                            var extension = System.IO.Path.GetExtension(item.Valid_ID_Path)?.ToLower();
                                            if (!string.IsNullOrEmpty(extension) && (extension == ".jpg" || extension == ".jpeg" || extension == ".png"))
                                            {
                                                <img src="@Url.Content(item.Valid_ID_Path)" alt="@item.Valid_ID" width="100" />
                                            }
                                            else
                                            {
                                                <span>Non-image file</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>No file</span>
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.Reason)</td>
                                    <td><span class="badge badge-danger">@Html.DisplayFor(modelItem => item.Status)</span></td>
                                    <td>@Html.DisplayFor(modelItem => item.RequestDate)</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm"><i class="fas fa-eye"></i></a>
                                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm"><i class="fas fa-edit"></i></a>
                                           
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Custom CSS -->
    <style>
        .form-select {
            border-radius: 8px;
        
            font-size: 16px;
            border: 1px solid #ced4da;
            transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

            .form-select:focus {
                border-color: #007bff;
                box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
                outline: none;
            }

            .form-select:hover {
                border-color: #6c757d;
            }

        .form-group label {
            font-weight: 500;
            color: #343a40;
            margin-bottom: 8px;
        }

        .form-row {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .form-group {
            flex: 1;
            min-width: 200px;
        }

            .form-group label i {
                color: #007bff;
                margin-right: 5px;
            }

        .custom-file-upload {
            position: relative;
            display: inline-block;
            width: 100%;
        }

            .custom-file-upload input[type="file"] {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                opacity: 0;
                cursor: pointer;
            }

        .custom-file-label {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 10px 15px;
            background-color: white;
            color: white;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            width: 100%;
            text-align: center;
        }

            .custom-file-label i {
                margin-right: 8px;
            }

            .custom-file-label:hover {
                background-color: white;
                box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
                transform: translateY(-1px);
            }

            .custom-file-label:active {
                transform: translateY(1px);
            }

        .text-danger {
            margin-top: 5px;
            display: block;
        }

        #pendingTable, #processTable, #acceptedTable, #rejectedTable {
            width: 100% !important;
        }

        .table {
            border-collapse: collapse;
            margin: 25px 0;
            font-size: 0.9em;
            font-family: sans-serif;
            min-width: 400px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
        }

            .table thead tr {
                background-color: #1a5f7a;
                color: #ffffff;
                text-align: left;
            }

            .table th,
            .table td {
                padding: 12px 15px;
                vertical-align: middle;
            }

            .table tbody tr {
                border-bottom: 1px solid #dddddd;
            }

                .table tbody tr:nth-of-type(even) {
                    background-color: #f3f3f3;
                }

                .table tbody tr:last-of-type {
                    border-bottom: 2px solid #1a5f7a;
                }

                .table tbody tr:hover {
                    background-color: #e6f2f7;
                }

            .table img {
                max-width: 100px;
                max-height: 100px;
                border-radius: 4px;
            }

        .badge {
            font-size: 0.85em;
            padding: 5px 10px;
        }

        .badge-warning {
            background-color: #ffc107;
            color: #1a5f7a;
        }

        .badge-success {
            background-color: #28a745;
        }

        .badge-danger {
            background-color: #dc3545;
        }

        .custom-orange {
            background-color: #fb5607;
            color: white;
        }

        .nav-tabs .nav-link {
            color: #1a5f7a;
            font-weight: 500;
        }

            .nav-tabs .nav-link.active {
                color: #1a5f7a;
                font-weight: 600;
                border-bottom: 3px solid #1a5f7a;
            }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }

        .card {
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #eaeaea;
        }
    </style>

    <!-- Scripts Section -->
    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <!-- Include necessary scripts (ensure these are not duplicated in the layout) -->
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
        <script>
            $(document).ready(function () {
                // Initialize the Pending tab's DataTable
                var pendingTable = $('#pendingTable').DataTable({
                    responsive: true,
                    dom: '<"top"lf>rt<"bottom"ip><"clear">',
                    language: {
                        search: "_INPUT_",
                        searchPlaceholder: "Search...",
                        lengthMenu: "Show _MENU_ entries",
                        paginate: {
                            first: "First",
                            last: "Last",
                            next: "Next",
                            previous: "Previous"
                        }
                    }
                });

                // Store references to all DataTables
                var tables = {
                    pending: pendingTable,
                    process: null,
                    accepted: null,
                    rejected: null
                };

                // Initialize DataTables when tabs are shown
                $('button[data-bs-toggle="tab"]').on('shown.bs.tab', function (e) {
                    var target = $(e.target).data('bs-target'); // Get the target tab pane

                    // Initialize the DataTable for the target tab if not already initialized
                    switch (target) {
                        case '#process':
                            if (tables.process === null) {
                                tables.process = $('#processTable').DataTable({
                                    responsive: true,
                                    dom: '<"top"lf>rt<"bottom"ip><"clear">',
                                    language: {
                                        search: "_INPUT_",
                                        searchPlaceholder: "Search...",
                                        lengthMenu: "Show _MENU_ entries",
                                        paginate: {
                                            first: "First",
                                            last: "Last",
                                            next: "Next",
                                            previous: "Previous"
                                        }
                                    }
                                });
                            }
                            break;
                        case '#accepted':
                            if (tables.accepted === null) {
                                tables.accepted = $('#acceptedTable').DataTable({
                                    responsive: true,
                                    dom: '<"top"lf>rt<"bottom"ip><"clear">',
                                    language: {
                                        search: "_INPUT_",
                                        searchPlaceholder: "Search...",
                                        lengthMenu: "Show _MENU_ entries",
                                        paginate: {
                                            first: "First",
                                            last: "Last",
                                            next: "Next",
                                            previous: "Previous"
                                        }
                                    }
                                });
                            }
                            break;
                        case '#rejected':
                            if (tables.rejected === null) {
                                tables.rejected = $('#rejectedTable').DataTable({
                                    responsive: true,
                                    dom: '<"top"lf>rt<"bottom"ip><"clear">',
                                    language: {
                                        search: "_INPUT_",
                                        searchPlaceholder: "Search...",
                                        lengthMenu: "Show _MENU_ entries",
                                        paginate: {
                                            first: "First",
                                            last: "Last",
                                            next: "Next",
                                            previous: "Previous"
                                        }
                                    }
                                });
                            }
                            break;
                    }

                    // Redraw the table to fix any rendering issues
                    var tableKey = target.substring(1); // Remove the '#' from target
                    if (tables[tableKey]) {
                        tables[tableKey].columns.adjust().responsive.recalc();
                    }
                });

                // Update the label text to show the selected file name
                document.querySelectorAll('.custom-file-upload input[type="file"]').forEach(input => {
                    input.addEventListener('change', function () {
                        const label = this.nextElementSibling;
                        const fileName = this.files.length > 0 ? this.files[0].name : 'Choose File';
                        label.innerHTML = `<i class="fas fa-upload"></i> ${fileName}`;
                    });
                });
            });


             function handleSubmit(event) {
                // Check if the form is valid
                if (document.getElementById("Create").checkValidity()) {
                    // Show success alert
                    document.getElementById("successAlert").classList.remove("d-none");

                    // Optionally, you can hide the alert after a few seconds
                    setTimeout(function() {
                        document.getElementById("successAlert").classList.add("d-none");
                    }, 3000);

                    return true; // Allow form submission
                } else {
                    event.preventDefault(); // Prevent form submission if not valid
                    return false;
                }
            }
        </script>
    }
</body>
</html>